{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@ixfx/core",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 80,
			"name": "AlignOpts",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for alignmnent"
					}
				]
			},
			"children": [
				{
					"id": 83,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, additional console messages are printed during\nexecution."
							}
						]
					},
					"sources": [
						{
							"fileName": "correlate.ts",
							"line": 32,
							"character": 11,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 82,
					"name": "matchThreshold",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the similarity score is above this threshold,\nconsider them the same"
							}
						]
					},
					"sources": [
						{
							"fileName": "correlate.ts",
							"line": 27,
							"character": 11,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						83,
						82
					]
				}
			],
			"sources": [
				{
					"fileName": "correlate.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L22"
				}
			]
		},
		{
			"id": 391,
			"name": "ArrayItems",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-array.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L2"
				}
			],
			"typeParameters": [
				{
					"id": 392,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 392,
					"name": "T",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "inferred",
						"name": "TItems"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"packageName": "@ixfx/core",
						"packagePath": "src/types-array.ts",
						"qualifiedName": "TItems"
					},
					"name": "TItems",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 390,
			"name": "ArrayLengthMutationKeys",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-array.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L1"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "splice"
					},
					{
						"type": "literal",
						"value": "push"
					},
					{
						"type": "literal",
						"value": "pop"
					},
					{
						"type": "literal",
						"value": "shift"
					},
					{
						"type": "literal",
						"value": "unshift"
					},
					{
						"type": "intrinsic",
						"name": "number"
					}
				]
			}
		},
		{
			"id": 351,
			"name": "BasicType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L10"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 348,
						"name": "StringOrNumber",
						"package": "@ixfx/core"
					},
					{
						"type": "intrinsic",
						"name": "object"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					}
				]
			}
		},
		{
			"id": 442,
			"name": "ChangeKind",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-compare.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L1"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "mutate"
					},
					{
						"type": "literal",
						"value": "add"
					},
					{
						"type": "literal",
						"value": "del"
					}
				]
			}
		},
		{
			"id": 443,
			"name": "ChangeRecord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-compare.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L2"
				}
			],
			"typeParameters": [
				{
					"id": 444,
					"name": "TKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							}
						]
					}
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "namedTupleMember",
						"name": "kind",
						"isOptional": false,
						"element": {
							"type": "reference",
							"target": 442,
							"name": "ChangeKind",
							"package": "@ixfx/core"
						}
					},
					{
						"type": "namedTupleMember",
						"name": "path",
						"isOptional": false,
						"element": {
							"type": "reference",
							"target": 444,
							"name": "TKey",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					},
					{
						"type": "namedTupleMember",
						"name": "value",
						"isOptional": false,
						"element": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				]
			}
		},
		{
			"id": 445,
			"name": "CompareChangeSet",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Result of compareObjectData"
					}
				]
			},
			"children": [
				{
					"id": 450,
					"name": "added",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that have been added"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L23"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 454,
								"name": "TKey",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 449,
					"name": "changed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values that have changed"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 454,
								"name": "TKey",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 448,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Results for child objects"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L15"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 454,
								"name": "TKey",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 445,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "CompareChangeSet",
								"package": "@ixfx/core"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 447,
					"name": "hasChanged",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "_True_ if there are any changes"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 452,
					"name": "isArray",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 451,
					"name": "removed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that have been removed"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L27"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 454,
							"name": "TKey",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 453,
					"name": "summary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Summary of changes"
							}
						]
					},
					"sources": [
						{
							"fileName": "types-compare.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L32"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 443,
							"typeArguments": [
								{
									"type": "reference",
									"target": 454,
									"name": "TKey",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "ChangeRecord",
							"package": "@ixfx/core"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						450,
						449,
						448,
						447,
						452,
						451,
						453
					]
				}
			],
			"sources": [
				{
					"fileName": "types-compare.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-compare.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 454,
					"name": "TKey",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			]
		},
		{
			"id": 2,
			"name": "Comparer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L4"
				}
			],
			"typeParameters": [
				{
					"id": 7,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "comparers.ts",
							"line": 4,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 5,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 6,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "CompareResult",
								"package": "@ixfx/core"
							}
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "CompareResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L3"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 33,
			"name": "Continuously",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Runs a function continuously, returned by "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "continuously",
						"target": 69
					}
				]
			},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L34"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 25,
						"name": "HasCompletion",
						"package": "@ixfx/core"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 34,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39,
									"name": "elapsedMs",
									"variant": "declaration",
									"kind": 262144,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 50,
											"character": 6,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L50"
										}
									],
									"getSignature": {
										"id": 40,
										"name": "elapsedMs",
										"variant": "signature",
										"kind": 524288,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "How many milliseconds since loop was started after being stopped."
												}
											]
										},
										"sources": [
											{
												"fileName": "continuously.ts",
												"line": 50,
												"character": 6,
												"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L50"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 45,
									"name": "interval",
									"variant": "declaration",
									"kind": 262144,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 63,
											"character": 6,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L63"
										},
										{
											"fileName": "continuously.ts",
											"line": 67,
											"character": 6,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L67"
										}
									],
									"getSignature": {
										"id": 46,
										"name": "interval",
										"variant": "signature",
										"kind": 524288,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Gets the current interval, ie. speed of loop."
												}
											]
										},
										"sources": [
											{
												"fileName": "continuously.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L67"
											}
										],
										"type": {
											"type": "reference",
											"target": 353,
											"name": "Interval",
											"package": "@ixfx/core"
										}
									},
									"setSignature": {
										"id": 47,
										"name": "interval",
										"variant": "signature",
										"kind": 1048576,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "Sets the interval speed of loop. Change will take effect on next loop. For it to kick\nin earlier, call .reset() after changing the value."
												}
											]
										},
										"sources": [
											{
												"fileName": "continuously.ts",
												"line": 63,
												"character": 6,
												"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L63"
											}
										],
										"parameters": [
											{
												"id": 48,
												"name": "interval",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 353,
													"name": "Interval",
													"package": "@ixfx/core"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								},
								{
									"id": 41,
									"name": "isDisposed",
									"variant": "declaration",
									"kind": 262144,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 54,
											"character": 6,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L54"
										}
									],
									"getSignature": {
										"id": 42,
										"name": "isDisposed",
										"variant": "signature",
										"kind": 524288,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "If disposed, the continuously instance won't be re-startable"
												}
											]
										},
										"sources": [
											{
												"fileName": "continuously.ts",
												"line": 54,
												"character": 6,
												"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L54"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								},
								{
									"id": 43,
									"name": "cancel",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 44,
											"name": "cancel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Stops loop. It can be restarted using .start()"
													}
												]
											},
											"sources": [
												{
													"fileName": "continuously.ts",
													"line": 58,
													"character": 2,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 37,
									"name": "reset",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 46,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L46"
										}
									],
									"signatures": [
										{
											"id": 38,
											"name": "reset",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "(Re-)starts the loop. If an existing iteration has been\nscheduled, this is cancelled and started again.\n\nThis can be useful when adjusting the interval"
													}
												]
											},
											"sources": [
												{
													"fileName": "continuously.ts",
													"line": 46,
													"character": 2,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L46"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								},
								{
									"id": 35,
									"name": "start",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L38"
										}
									],
									"signatures": [
										{
											"id": 36,
											"name": "start",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Starts loop. If already running, does nothing"
													}
												]
											},
											"sources": [
												{
													"fileName": "continuously.ts",
													"line": 38,
													"character": 2,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Accessors",
									"children": [
										39,
										45,
										41
									]
								},
								{
									"title": "Methods",
									"children": [
										43,
										37,
										35
									]
								}
							],
							"sources": [
								{
									"fileName": "continuously.ts",
									"line": 34,
									"character": 43,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L34"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 54,
			"name": "ContinuouslyAsyncCallback",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 84,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L84"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 84,
							"character": 40,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 56,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57,
									"name": "ticks",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58,
									"name": "elapsedMs",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60,
			"name": "ContinuouslyOpts",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "continuously",
						"target": 69
					}
				]
			},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 103,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L103"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"packageName": "typescript",
					"packagePath": "lib/lib.es5.d.ts",
					"qualifiedName": "Readonly"
				},
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 61,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 63,
									"name": "fireBeforeWait",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If _true_, callback runs before waiting period."
											}
										],
										"blockTags": [
											{
												"tag": "@defaultValue",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nfalse\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 112,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L112"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 64,
									"name": "onStartCalled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called whenever .start() is invoked.\nIf this function returns:\n - "
											},
											{
												"kind": "code",
												"text": "`continue`"
											},
											{
												"kind": "text",
												"text": ": the loop starts if it hasn't started yet, or continues if already started\n - "
											},
											{
												"kind": "code",
												"text": "`cancel`"
											},
											{
												"kind": "text",
												"text": ": loop stops, but can be re-started if .start() is called again\n - "
											},
											{
												"kind": "code",
												"text": "`dispose`"
											},
											{
												"kind": "text",
												"text": ": loop stops and will throw an error if .start() is attempted to be called\n - "
											},
											{
												"kind": "code",
												"text": "`reset`"
											},
											{
												"kind": "text",
												"text": ": loop resets (ie. existing scheduled task is cancelled)"
											}
										]
									},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 122,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L122"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 65,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "continuously.ts",
													"line": 122,
													"character": 17,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L122"
												}
											],
											"signatures": [
												{
													"id": 66,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 67,
															"name": "ticks",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 68,
															"name": "elapsedMs",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 59,
														"name": "OnStartCalled",
														"package": "@ixfx/core"
													}
												}
											]
										}
									}
								},
								{
									"id": 62,
									"name": "signal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Abort signal to exit loop"
											}
										]
									},
									"sources": [
										{
											"fileName": "continuously.ts",
											"line": 107,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L107"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										63,
										64,
										62
									]
								}
							],
							"sources": [
								{
									"fileName": "continuously.ts",
									"line": 103,
									"character": 40,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L103"
								}
							]
						}
					}
				],
				"name": "Readonly",
				"package": "typescript"
			}
		},
		{
			"id": 49,
			"name": "ContinuouslySyncCallback",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 70,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L70"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 50,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 70,
							"character": 39,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 51,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 52,
									"name": "ticks",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 53,
									"name": "elapsedMs",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 84,
			"name": "DataWithId",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Some data with an id property."
					}
				]
			},
			"sources": [
				{
					"fileName": "correlate.ts",
					"line": 38,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L38"
				}
			],
			"typeParameters": [
				{
					"id": 87,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 87,
						"name": "V",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 85,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 86,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "correlate.ts",
											"line": 39,
											"character": 11,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										86
									]
								}
							],
							"sources": [
								{
									"fileName": "correlate.ts",
									"line": 38,
									"character": 32,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L38"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 336,
			"name": "DeepWriteable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 30,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L30"
				}
			],
			"typeParameters": [
				{
					"id": 337,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 337,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "reference",
					"target": 336,
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@ixfx/core",
									"packagePath": "src/ts-utility.ts",
									"qualifiedName": "P"
								},
								"name": "P",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 337,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"name": "DeepWriteable",
					"package": "@ixfx/core"
				},
				"readonlyModifier": "-"
			}
		},
		{
			"id": 393,
			"name": "FixedLengthArray",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-array.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L3"
				}
			],
			"typeParameters": [
				{
					"id": 398,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 398,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 398,
											"name": "T",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": 390,
										"name": "ArrayLengthMutationKeys",
										"package": "@ixfx/core"
									}
								],
								"name": "Exclude",
								"package": "typescript"
							}
						],
						"name": "Pick",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 394,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 395,
									"name": "[iterator]",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types-array.ts",
											"line": 5,
											"character": 6,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L5"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 396,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "types-array.ts",
													"line": 5,
													"character": 27,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L5"
												}
											],
											"signatures": [
												{
													"id": 397,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es2015.iterable.d.ts",
															"qualifiedName": "IterableIterator"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 391,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 398,
																		"name": "T",
																		"package": "@ixfx/core",
																		"refersToTypeParameter": true
																	}
																],
																"name": "ArrayItems",
																"package": "@ixfx/core"
															}
														],
														"name": "IterableIterator",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										395
									]
								}
							],
							"sources": [
								{
									"fileName": "types-array.ts",
									"line": 5,
									"character": 4,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-array.ts#L5"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 25,
			"name": "HasCompletion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 27,
					"name": "runState",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 12,
							"character": 6,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L12"
						}
					],
					"getSignature": {
						"id": 28,
						"name": "runState",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Gets the current run state\nidle: not yet started or completed with no future run scheduled\nscheduled: waiting to run\nrunning: currently executing its callback"
								}
							]
						},
						"sources": [
							{
								"fileName": "continuously.ts",
								"line": 12,
								"character": 6,
								"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L12"
							}
						],
						"type": {
							"type": "reference",
							"target": 24,
							"name": "HasCompletionRunStates",
							"package": "@ixfx/core"
						}
					}
				},
				{
					"id": 29,
					"name": "startCount",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 22,
							"character": 6,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L22"
						}
					],
					"getSignature": {
						"id": 30,
						"name": "startCount",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Returns the number of times the scheduled function\nhas been executed.\n\nThis number will be reset in some conditions.\nFor example "
								},
								{
									"kind": "code",
									"text": "`continuously`"
								},
								{
									"kind": "text",
									"text": " resets it when the loop stops.\n\nUse "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "startCountTotal",
									"target": 31
								},
								{
									"kind": "text",
									"text": " to track total number."
								}
							]
						},
						"sources": [
							{
								"fileName": "continuously.ts",
								"line": 22,
								"character": 6,
								"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L22"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 31,
					"name": "startCountTotal",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 28,
							"character": 6,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L28"
						}
					],
					"getSignature": {
						"id": 32,
						"name": "startCountTotal",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Total number of times scheduled function has been\nexecuted."
								}
							]
						},
						"sources": [
							{
								"fileName": "continuously.ts",
								"line": 28,
								"character": 6,
								"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L28"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Accessors",
					"children": [
						27,
						29,
						31
					]
				}
			],
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L5"
				}
			]
		},
		{
			"id": 24,
			"name": "HasCompletionRunStates",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L4"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "idle"
					},
					{
						"type": "literal",
						"value": "scheduled"
					},
					{
						"type": "literal",
						"value": "running"
					}
				]
			}
		},
		{
			"id": 359,
			"name": "IDictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 361,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 362,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 363,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 368,
										"name": "K",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 369,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 364,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L52"
								}
							],
							"parameters": [
								{
									"id": 366,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 368,
										"name": "K",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 367,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 369,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						361,
						364
					]
				}
			],
			"sources": [
				{
					"fileName": "types.ts",
					"line": 50,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L50"
				}
			],
			"typeParameters": [
				{
					"id": 368,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 369,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 353,
			"name": "Interval",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interval types allows for more expressive coding, rather than embedding millisecond values.\n\nThat is, we can use "
					},
					{
						"kind": "code",
						"text": "`{ mins: 5 }`"
					},
					{
						"kind": "text",
						"text": " to mean 5 minutes rather than "
					},
					{
						"kind": "code",
						"text": "`5*60*1000`"
					},
					{
						"kind": "text",
						"text": " \nor worse, 300000, for the same value."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```js\n{ hours: 1 };  // 1 hour\n{ mins: 5 };   // 5 mins\n{ secs: 5 };   // 5 secs\n{ millis: 5 }; // 5 milliseconds\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIf several fields are used, this sums their value\n"
							},
							{
								"kind": "code",
								"text": "```js\n{ secs: 2, millis: 1 }; // equal 2001 milliseconds.\n```"
							},
							{
								"kind": "text",
								"text": "\n\nWherever ixfx takes an "
							},
							{
								"kind": "code",
								"text": "`Interval`"
							},
							{
								"kind": "text",
								"text": ", you can also just provide a number instead.\nThis will be taken as a millisecond value."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "intervalToMs",
								"target": 203
							},
							{
								"kind": "text",
								"text": " to convert to milliseconds."
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isInterval",
								"target": 207
							},
							{
								"kind": "text",
								"text": " check whether input is an Interval type"
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedToHumanString",
								"target": 210
							},
							{
								"kind": "text",
								"text": " render interval in human-friendly form"
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 41,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L41"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 354,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 357,
									"name": "hours",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 46,
											"character": 13,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 355,
									"name": "millis",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 44,
											"character": 13,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 358,
									"name": "mins",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 47,
											"character": 13,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 356,
									"name": "secs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 45,
											"character": 13,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										357,
										355,
										358,
										356
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 43,
									"character": 4,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L43"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 131,
			"name": "IsEqual",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function that returns true if "
					},
					{
						"kind": "code",
						"text": "`a`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`b`"
					},
					{
						"kind": "text",
						"text": " are considered equal"
					}
				]
			},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 6,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L6"
				}
			],
			"typeParameters": [
				{
					"id": 136,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 132,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 6,
							"character": 25,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L6"
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 134,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 136,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 135,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 136,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 163,
			"name": "IsEqualContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Return _true_ if "
					},
					{
						"kind": "code",
						"text": "`a`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`b`"
					},
					{
						"kind": "text",
						"text": " ought to be considered equal\nat a given path"
					}
				]
			},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 134,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L134"
				}
			],
			"typeParameters": [
				{
					"id": 169,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 164,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 134,
							"character": 32,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L134"
						}
					],
					"signatures": [
						{
							"id": 165,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 166,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 169,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 167,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 169,
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 168,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 370,
			"name": "IWithEntries",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 372,
					"name": "entries",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 56,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 373,
							"name": "entries",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "types.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "IterableIterator"
								},
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"target": 374,
													"name": "K",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 375,
													"name": "V",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												}
											]
										}
									}
								],
								"name": "IterableIterator",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						372
					]
				}
			],
			"sources": [
				{
					"fileName": "types.ts",
					"line": 55,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L55"
				}
			],
			"typeParameters": [
				{
					"id": 374,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 375,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 352,
			"name": "KeyValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L11"
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "namedTupleMember",
							"name": "key",
							"isOptional": false,
							"element": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"type": "namedTupleMember",
							"name": "value",
							"isOptional": false,
							"element": {
								"type": "reference",
								"target": 348,
								"name": "StringOrNumber",
								"package": "@ixfx/core"
							}
						}
					]
				}
			}
		},
		{
			"id": 195,
			"name": "KeyValueSorter",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "key-value.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/key-value.ts#L26"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 196,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "key-value.ts",
							"line": 26,
							"character": 29,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/key-value.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 198,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 352,
											"name": "KeyValue",
											"package": "@ixfx/core"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 352,
									"name": "KeyValue",
									"package": "@ixfx/core"
								}
							}
						}
					]
				}
			}
		},
		{
			"id": 199,
			"name": "KeyValueSortSyles",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "key-value.ts",
					"line": 38,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/key-value.ts#L38"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "value"
					},
					{
						"type": "literal",
						"value": "value-reverse"
					},
					{
						"type": "literal",
						"value": "key"
					},
					{
						"type": "literal",
						"value": "key-reverse"
					}
				]
			}
		},
		{
			"id": 59,
			"name": "OnStartCalled",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 98,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L98"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "continue"
					},
					{
						"type": "literal",
						"value": "cancel"
					},
					{
						"type": "literal",
						"value": "reset"
					},
					{
						"type": "literal",
						"value": "dispose"
					}
				]
			}
		},
		{
			"id": 413,
			"name": "Passed",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 417,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 416,
					"name": "signal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": 412,
						"name": "SignalKinds",
						"package": "@ixfx/core"
					}
				},
				{
					"id": 415,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 418,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						417,
						416,
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L11"
				}
			],
			"typeParameters": [
				{
					"id": 418,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 349,
			"name": "Primitive",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L7"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					}
				]
			}
		},
		{
			"id": 350,
			"name": "PrimitiveOrObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 8,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L8"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 349,
						"name": "Primitive",
						"package": "@ixfx/core"
					},
					{
						"type": "intrinsic",
						"name": "object"
					}
				]
			}
		},
		{
			"id": 376,
			"name": "RankArrayOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 59,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L59"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 385,
						"name": "RankOptions",
						"package": "@ixfx/core"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 377,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 378,
									"name": "withinArrays",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If _true_, it's only the highest _within_ an array that is considered,\nrather than tracking the higest between arrays\nDefault: _false_"
											}
										]
									},
									"sources": [
										{
											"fileName": "types.ts",
											"line": 65,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L65"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										378
									]
								}
							],
							"sources": [
								{
									"fileName": "types.ts",
									"line": 59,
									"character": 45,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L59"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 379,
			"name": "RankFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A rank function that compares A and B.\nReturns the highest value, 'a' or 'b'. \nReturns 'eq' if values are equal"
					}
				]
			},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 73,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 384,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 380,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 73,
							"character": 30,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 381,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 382,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 384,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 383,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 384,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "a"
									},
									{
										"type": "literal",
										"value": "b"
									},
									{
										"type": "literal",
										"value": "eq"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 385,
			"name": "RankOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 388,
					"name": "emitEqualRanked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If _true_, also emits values when they rank equal with current highest.\n_false_ by default"
							}
						]
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L84"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 389,
					"name": "emitRepeatHighest",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If _true_, emits the current highest value even if it hasn't changed.\nThis means it will match the tempo of the incoming stream."
							}
						]
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L89"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 387,
					"name": "includeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set, only values with this JS type are included"
							}
						]
					},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 79,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L79"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "string"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "object"
							},
							{
								"type": "literal",
								"value": "boolean"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						388,
						389,
						387
					]
				}
			],
			"sources": [
				{
					"fileName": "types.ts",
					"line": 75,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L75"
				}
			]
		},
		{
			"id": 419,
			"name": "Reactive",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Reactive"
					}
				]
			},
			"children": [
				{
					"id": 433,
					"name": "dispose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "dispose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disposes the reactive, providing a reason for debug tracing"
									}
								]
							},
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L48"
								}
							],
							"parameters": [
								{
									"id": 435,
									"name": "reason",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 436,
					"name": "isDisposed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "isDisposed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns _true_ if Reactive is disposed"
									}
								]
							},
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 421,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 422,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subscribes to a reactive. Receives\ndata as well as signals. Use "
									},
									{
										"kind": "code",
										"text": "`onValue`"
									},
									{
										"kind": "text",
										"text": " if you\njust care about values.\n\nReturn result unsubscribes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst unsub = someReactive.on(msg => {\n   // Do something with msg.value\n});\n\nunsub(); // Unsubscribe\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L36"
								}
							],
							"parameters": [
								{
									"id": 423,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 424,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "types-reactive.ts",
													"line": 36,
													"character": 14,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L36"
												}
											],
											"signatures": [
												{
													"id": 425,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "types-reactive.ts",
															"line": 36,
															"character": 14,
															"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L36"
														}
													],
													"parameters": [
														{
															"id": 426,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 413,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 441,
																		"name": "V",
																		"package": "@ixfx/core",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Passed",
																"package": "@ixfx/core"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 409,
								"name": "Unsubscriber",
								"package": "@ixfx/core"
							}
						}
					]
				},
				{
					"id": 427,
					"name": "onValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "onValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subscribes to a reactive's values.\nReturns a function that unsubscribes."
									}
								]
							},
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L42"
								}
							],
							"parameters": [
								{
									"id": 429,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 430,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "types-reactive.ts",
													"line": 42,
													"character": 19,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L42"
												}
											],
											"signatures": [
												{
													"id": 431,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "types-reactive.ts",
															"line": 42,
															"character": 19,
															"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L42"
														}
													],
													"parameters": [
														{
															"id": 432,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 441,
																"name": "V",
																"package": "@ixfx/core",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 409,
								"name": "Unsubscriber",
								"package": "@ixfx/core"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional 'set' to write a value."
									}
								]
							},
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L57"
								}
							],
							"parameters": [
								{
									"id": 440,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 441,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						433,
						436,
						421,
						427,
						438
					]
				}
			],
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 19,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L19"
				}
			],
			"typeParameters": [
				{
					"id": 441,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 404,
			"name": "ReactiveInitial",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 408,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 419,
						"typeArguments": [
							{
								"type": "reference",
								"target": 408,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Reactive",
						"package": "@ixfx/core"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 405,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 406,
									"name": "last",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "types-reactive.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L6"
										}
									],
									"signatures": [
										{
											"id": 407,
											"name": "last",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "types-reactive.ts",
													"line": 6,
													"character": 2,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": 408,
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										406
									]
								}
							],
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 5,
									"character": 47,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L5"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 399,
			"name": "ReactiveNonInitial",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L1"
				}
			],
			"typeParameters": [
				{
					"id": 403,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 419,
						"typeArguments": [
							{
								"type": "reference",
								"target": 403,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Reactive",
						"package": "@ixfx/core"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 400,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 401,
									"name": "last",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "types-reactive.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L2"
										}
									],
									"signatures": [
										{
											"id": 402,
											"name": "last",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "types-reactive.ts",
													"line": 2,
													"character": 2,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L2"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": 403,
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										401
									]
								}
							],
							"sources": [
								{
									"fileName": "types-reactive.ts",
									"line": 1,
									"character": 50,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L1"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 328,
			"name": "ReadonlyRemapObjectPropertyType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L22"
				}
			],
			"typeParameters": [
				{
					"id": 329,
					"name": "OriginalType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 330,
					"name": "PropertyType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Property",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 329,
						"name": "OriginalType",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "reference",
					"target": 330,
					"name": "PropertyType",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				},
				"readonlyModifier": "+"
			}
		},
		{
			"id": 326,
			"name": "RecursivePartial",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 327,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 327,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"packageName": "@ixfx/core",
								"packagePath": "src/ts-utility.ts",
								"qualifiedName": "P"
							},
							"name": "P",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 327,
							"name": "T",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "array",
						"elementType": {
							"type": "inferred",
							"name": "U"
						}
					},
					"trueType": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 326,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"packageName": "@ixfx/core",
										"packagePath": "src/ts-utility.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "RecursivePartial",
							"package": "@ixfx/core"
						}
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@ixfx/core",
									"packagePath": "src/ts-utility.ts",
									"qualifiedName": "P"
								},
								"name": "P",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 327,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "object"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						},
						"trueType": {
							"type": "reference",
							"target": 326,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"packageName": "@ixfx/core",
											"packagePath": "src/ts-utility.ts",
											"qualifiedName": "P"
										},
										"name": "P",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 327,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "RecursivePartial",
							"package": "@ixfx/core"
						},
						"falseType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@ixfx/core",
									"packagePath": "src/ts-utility.ts",
									"qualifiedName": "P"
								},
								"name": "P",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 327,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 323,
			"name": "RecursiveReplace",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Remaps "
					},
					{
						"kind": "code",
						"text": "`TShape`"
					},
					{
						"kind": "text",
						"text": " so each field has type "
					},
					{
						"kind": "code",
						"text": "`TFieldValue`"
					},
					{
						"kind": "text",
						"text": ".\nRecursive."
					}
				]
			},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 324,
					"name": "TShape",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 325,
					"name": "TFieldValue",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 324,
						"name": "TShape",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"packageName": "@ixfx/core",
								"packagePath": "src/ts-utility.ts",
								"qualifiedName": "P"
							},
							"name": "P",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 324,
							"name": "TShape",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "array",
						"elementType": {
							"type": "inferred",
							"name": "U"
						}
					},
					"trueType": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 323,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"packageName": "@ixfx/core",
										"packagePath": "src/ts-utility.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 325,
									"name": "TFieldValue",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "RecursiveReplace",
							"package": "@ixfx/core"
						}
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@ixfx/core",
									"packagePath": "src/ts-utility.ts",
									"qualifiedName": "P"
								},
								"name": "P",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 324,
								"name": "TShape",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						},
						"trueType": {
							"type": "reference",
							"target": 325,
							"name": "TFieldValue",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						},
						"falseType": {
							"type": "reference",
							"target": 323,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"packageName": "@ixfx/core",
											"packagePath": "src/ts-utility.ts",
											"qualifiedName": "P"
										},
										"name": "P",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 324,
										"name": "TShape",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 325,
									"name": "TFieldValue",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "RecursiveReplace",
							"package": "@ixfx/core"
						}
					}
				}
			}
		},
		{
			"id": 331,
			"name": "RemapObjectPropertyType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L25"
				}
			],
			"typeParameters": [
				{
					"id": 332,
					"name": "OriginalType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 333,
					"name": "PropertyType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Property",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 332,
						"name": "OriginalType",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "reference",
					"target": 333,
					"name": "PropertyType",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 338,
			"name": "RequireOnlyOne",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L34"
				}
			],
			"typeParameters": [
				{
					"id": 339,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 340,
					"name": "Keys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 339,
							"name": "T",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 339,
							"name": "T",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 339,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 339,
											"name": "T",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": 340,
										"name": "Keys",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Exclude",
								"package": "typescript"
							}
						],
						"name": "Pick",
						"package": "typescript"
					},
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": 340,
							"name": "Keys",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "reference",
								"target": 340,
								"name": "Keys",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"templateType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Required"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Pick"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 339,
														"name": "T",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"packageName": "@ixfx/core",
															"packagePath": "src/ts-utility.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												],
												"name": "Pick",
												"package": "typescript"
											}
										],
										"name": "Required",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Exclude"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 340,
																"name": "Keys",
																"package": "@ixfx/core",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "@ixfx/core",
																	"packagePath": "src/ts-utility.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@ixfx/core",
																"refersToTypeParameter": true
															}
														],
														"name": "Exclude",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							},
							"optionalModifier": "-"
						}
					}
				]
			}
		},
		{
			"id": 302,
			"name": "ResolvedObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-fields.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 307,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 287,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ResolveToValue",
								"package": "@ixfx/core"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 307,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"packageName": "@ixfx/core",
								"packagePath": "src/resolve-fields.ts",
								"qualifiedName": "K"
							},
							"name": "K",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 307,
							"name": "T",
							"package": "@ixfx/core",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "number"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "number"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"packageName": "@ixfx/core",
									"packagePath": "src/resolve-fields.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 307,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "string"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"packageName": "@ixfx/core",
										"packagePath": "src/resolve-fields.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 307,
									"name": "T",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"trueType": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"packageName": "@ixfx/core",
											"packagePath": "src/resolve-fields.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 307,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "bigint"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "bigint"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"packageName": "@ixfx/core",
												"packagePath": "src/resolve-fields.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 307,
											"name": "T",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 303,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "resolve-fields.ts",
													"line": 11,
													"character": 19,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L11"
												}
											],
											"signatures": [
												{
													"id": 304,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Awaited"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "ReturnType"
												},
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"packageName": "@ixfx/core",
																"packagePath": "src/resolve-fields.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@ixfx/core",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 307,
															"name": "T",
															"package": "@ixfx/core",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "ReturnType",
												"package": "typescript"
											}
										],
										"name": "Awaited",
										"package": "typescript"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"packageName": "@ixfx/core",
													"packagePath": "src/resolve-fields.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 307,
												"name": "T",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 305,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "resolve-fields.ts",
														"line": 12,
														"character": 19,
														"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L12"
													}
												],
												"signatures": [
													{
														"id": 306,
														"name": "__type",
														"variant": "signature",
														"kind": 4096,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "ReturnType"
											},
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"packageName": "@ixfx/core",
															"packagePath": "src/resolve-fields.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 307,
														"name": "T",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "ReturnType",
											"package": "typescript"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"packageName": "@ixfx/core",
														"packagePath": "src/resolve-fields.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 307,
													"name": "T",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reference",
												"target": 399,
												"typeArguments": [
													{
														"type": "inferred",
														"name": "V"
													}
												],
												"name": "ReactiveNonInitial",
												"package": "@ixfx/core"
											},
											"trueType": {
												"type": "reference",
												"target": {
													"packageName": "@ixfx/core",
													"packagePath": "src/resolve-fields.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"packageName": "@ixfx/core",
															"packagePath": "src/resolve-fields.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 307,
														"name": "T",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"packageName": "typescript",
														"packagePath": "lib/lib.es2015.generator.d.ts",
														"qualifiedName": "Generator"
													},
													"typeArguments": [
														{
															"type": "inferred",
															"name": "V"
														}
													],
													"name": "Generator",
													"package": "typescript"
												},
												"trueType": {
													"type": "reference",
													"target": {
														"packageName": "@ixfx/core",
														"packagePath": "src/resolve-fields.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "unknown",
															"name": "..."
														},
														"objectType": {
															"type": "unknown",
															"name": "..."
														}
													},
													"extendsType": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es2018.asyncgenerator.d.ts",
															"qualifiedName": "AsyncGenerator"
														},
														"typeArguments": [
															{
																"type": "unknown",
																"name": "..."
															}
														],
														"name": "AsyncGenerator",
														"package": "typescript"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"packageName": "@ixfx/core",
															"packagePath": "src/resolve-fields.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "unknown",
															"name": "..."
														},
														"extendsType": {
															"type": "unknown",
															"name": "..."
														},
														"trueType": {
															"type": "unknown",
															"name": "..."
														},
														"falseType": {
															"type": "unknown",
															"name": "..."
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		{
			"id": 289,
			"name": "ResolveFallbackOpts",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"children": [
				{
					"id": 292,
					"name": "overrideWithLast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 162,
							"character": 49,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 291,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 162,
							"character": 39,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L162"
						}
					],
					"type": {
						"type": "reference",
						"target": 293,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						292,
						291
					]
				}
			],
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 162,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L162"
				}
			],
			"typeParameters": [
				{
					"id": 293,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 287,
			"name": "ResolveToValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L14"
				}
			],
			"typeParameters": [
				{
					"id": 288,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 282,
						"typeArguments": [
							{
								"type": "reference",
								"target": 288,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ResolveToValueAsync",
						"package": "@ixfx/core"
					},
					{
						"type": "reference",
						"target": 277,
						"typeArguments": [
							{
								"type": "reference",
								"target": 288,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ResolveToValueSync",
						"package": "@ixfx/core"
					}
				]
			}
		},
		{
			"id": 282,
			"name": "ResolveToValueAsync",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 286,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2018.asyncgenerator.d.ts",
							"qualifiedName": "AsyncGenerator"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 286,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "AsyncGenerator",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2018.asynciterable.d.ts",
							"qualifiedName": "AsyncIterableIterator"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 286,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "AsyncIterableIterator",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 286,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 283,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "resolve-core.ts",
									"line": 13,
									"character": 98,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 284,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 285,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 286,
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 277,
			"name": "ResolveToValueSync",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Something that can resolve to a value"
					}
				]
			},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L12"
				}
			],
			"typeParameters": [
				{
					"id": 281,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 351,
						"name": "BasicType",
						"package": "@ixfx/core"
					},
					{
						"type": "reference",
						"target": 399,
						"typeArguments": [
							{
								"type": "reference",
								"target": 281,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ReactiveNonInitial",
						"package": "@ixfx/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.generator.d.ts",
							"qualifiedName": "Generator"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 281,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Generator",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.iterable.d.ts",
							"qualifiedName": "IterableIterator"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 281,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "IterableIterator",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 278,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "resolve-core.ts",
									"line": 12,
									"character": 110,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L12"
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 280,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 281,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 341,
			"name": "Rest",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L45"
				}
			],
			"typeParameters": [
				{
					"id": 342,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 342,
					"name": "T",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": {
						"packageName": "@ixfx/core",
						"packagePath": "src/ts-utility.ts",
						"qualifiedName": "R"
					},
					"name": "R",
					"package": "@ixfx/core",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 412,
			"name": "SignalKinds",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L10"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "done"
					},
					{
						"type": "literal",
						"value": "warn"
					}
				]
			}
		},
		{
			"id": 74,
			"name": "Similarity",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Returns the similarity of "
					},
					{
						"kind": "code",
						"text": "`a`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`b`"
					},
					{
						"kind": "text",
						"text": " to each other,\nwhere higher similarity should be a higher number."
					}
				]
			},
			"sources": [
				{
					"fileName": "correlate.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 79,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 75,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "correlate.ts",
							"line": 7,
							"character": 28,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 77,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 79,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 78,
									"name": "b",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 79,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			}
		},
		{
			"id": 107,
			"name": "Since",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "elapsed.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L4"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 108,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "elapsed.ts",
							"line": 4,
							"character": 20,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			}
		},
		{
			"id": 308,
			"name": "SleepOpts",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "sleep.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 312,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 353,
						"name": "Interval",
						"package": "@ixfx/core"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 309,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 310,
											"name": "signal",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "sleep.ts",
													"line": 6,
													"character": 11,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L6"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "AbortSignal"
												},
												"name": "AbortSignal",
												"package": "typescript"
											}
										},
										{
											"id": 311,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "sleep.ts",
													"line": 7,
													"character": 11,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L7"
												}
											],
											"type": {
												"type": "reference",
												"target": 312,
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												310,
												311
											]
										}
									],
									"sources": [
										{
											"fileName": "sleep.ts",
											"line": 5,
											"character": 46,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L5"
										}
									]
								}
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 348,
			"name": "StringOrNumber",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 6,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L6"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					}
				]
			}
		},
		{
			"id": 343,
			"name": "ToString",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L3"
				}
			],
			"typeParameters": [
				{
					"id": 347,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 344,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types.ts",
							"line": 3,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types.ts#L3"
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 346,
									"name": "itemToMakeStringFor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 347,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			}
		},
		{
			"id": 229,
			"name": "TrackUnique",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "track-unique.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L3"
				}
			],
			"typeParameters": [
				{
					"id": 233,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 230,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "track-unique.ts",
							"line": 3,
							"character": 29,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L3"
						}
					],
					"signatures": [
						{
							"id": 231,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 232,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 233,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 409,
			"name": "Unsubscriber",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types-reactive.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L9"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 410,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types-reactive.ts",
							"line": 9,
							"character": 27,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/types-reactive.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 411,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 334,
			"name": "Writeable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "ts-utility.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/ts-utility.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 335,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 335,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"packageName": "@ixfx/core",
							"packagePath": "src/ts-utility.ts",
							"qualifiedName": "P"
						},
						"name": "P",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 335,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				},
				"readonlyModifier": "-"
			}
		},
		{
			"id": 170,
			"name": "isEqualContextString",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Returns _true_ if "
					},
					{
						"kind": "code",
						"text": "`a`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`b are equal based on their JSON representations.\n`"
					},
					{
						"kind": "text",
						"text": "path` is ignored."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "a",
						"content": []
					},
					{
						"tag": "@param",
						"name": "b",
						"content": []
					},
					{
						"tag": "@param",
						"name": "path",
						"content": []
					},
					{
						"tag": "@returns",
						"content": []
					}
				]
			},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 144,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L144"
				}
			],
			"type": {
				"type": "reference",
				"target": 163,
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "unknown"
					}
				],
				"name": "IsEqualContext",
				"package": "@ixfx/core"
			},
			"defaultValue": "..."
		},
		{
			"id": 88,
			"name": "align",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "correlate.ts",
					"line": 72,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 89,
					"name": "align",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Attempts to align prior data with new data, based on a provided similarity function.\n\nSee also "
							},
							{
								"kind": "code",
								"text": "`alignById`"
							},
							{
								"kind": "text",
								"text": " for a version which encloses parameters.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Compare data based on x,y distance\nconst fn = (a, b) => {\n return 1-Points.distance(a, b);\n}\nconst lastData = [\n { id:`1`, x:100, y:200 }\n ...\n]\nconst newData = [\n { id:`2`, x:101, y:200 }\n]\nconst aligned = Correlate.align(fn, lastdata, newData, opts);\n\n// Result:\n[\n { id:`1`, x:101, y:200 }\n]\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "correlate.ts",
							"line": 72,
							"character": 21,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 90,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 91,
							"name": "similarityFunction",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to compute similarity"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 74,
								"typeArguments": [
									{
										"type": "reference",
										"target": 90,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Similarity",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 92,
							"name": "lastData",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Old data"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 84,
												"typeArguments": [
													{
														"type": "reference",
														"target": 90,
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												],
												"name": "DataWithId",
												"package": "@ixfx/core"
											}
										}
									}
								]
							}
						},
						{
							"id": 93,
							"name": "newData",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "New data"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 84,
										"typeArguments": [
											{
												"type": "reference",
												"target": 90,
												"name": "V",
												"package": "@ixfx/core",
												"refersToTypeParameter": true
											}
										],
										"name": "DataWithId",
										"package": "@ixfx/core"
									}
								}
							}
						},
						{
							"id": 94,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 80,
								"name": "AlignOpts",
								"package": "@ixfx/core"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 84,
								"typeArguments": [
									{
										"type": "reference",
										"target": 90,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "DataWithId",
								"package": "@ixfx/core"
							}
						}
					}
				}
			]
		},
		{
			"id": 95,
			"name": "alignById",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "correlate.ts",
					"line": 173,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L173"
				}
			],
			"signatures": [
				{
					"id": 96,
					"name": "alignById",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a function that attempts to align a series of data by its id.\nSee also "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "align",
								"target": 88
							},
							{
								"kind": "text",
								"text": " for a version with no internal storage.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Compare data based on x,y distance\nconst fn = (a, b) => {\n return 1-Points.distance(a, b);\n}\nconst aligner = Correlate.alignById(fn, opts);\n\nconst lastData = [\n { id:`1`, x:100, y:200 }\n ...\n]\nconst aligned = aligner(lastData);\n\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "correlate.ts",
							"line": 173,
							"character": 25,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L173"
						}
					],
					"typeParameters": [
						{
							"id": 97,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 98,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to compute similarity"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 74,
								"typeArguments": [
									{
										"type": "reference",
										"target": 97,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Similarity",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 99,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 80,
								"name": "AlignOpts",
								"package": "@ixfx/core"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 100,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "correlate.ts",
									"line": 176,
									"character": 18,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L176"
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "correlate.ts",
											"line": 176,
											"character": 18,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/correlate.ts#L176"
										}
									],
									"parameters": [
										{
											"id": 102,
											"name": "newData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 84,
													"typeArguments": [
														{
															"type": "reference",
															"target": 97,
															"name": "V",
															"package": "@ixfx/core",
															"refersToTypeParameter": true
														}
													],
													"name": "DataWithId",
													"package": "@ixfx/core"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 84,
											"typeArguments": [
												{
													"type": "reference",
													"target": 97,
													"name": "V",
													"package": "@ixfx/core",
													"refersToTypeParameter": true
												}
											],
											"name": "DataWithId",
											"package": "@ixfx/core"
										}
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 180,
			"name": "compareIterableValuesShallow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "iterable-compare-values-shallow.ts",
					"line": 24,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L24"
				}
			],
			"signatures": [
				{
					"id": 181,
					"name": "compareIterableValuesShallow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Compares the values of two iterables, returning a list\nof items they have in common and those unique in "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": ".\nIgnores ordering of values, and is NOT recursive.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst a = ['apples', 'oranges', 'pears' ]\nconst b = ['pears', 'kiwis', 'bananas' ];\n\nconst r = compareValuesShallow(a, b);\nr.shared;  // [ 'pears' ]\nr.a;       // [ 'apples', 'oranges' ]\nr.b;       // [ 'kiwis', 'bananas' ]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nBy default uses === semantics for comparison."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "iterable-compare-values-shallow.ts",
							"line": 24,
							"character": 44,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L24"
						}
					],
					"typeParameters": [
						{
							"id": 182,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 183,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "Iterable"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 182,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Iterable",
								"package": "typescript"
							}
						},
						{
							"id": 184,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es2015.iterable.d.ts",
									"qualifiedName": "Iterable"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 182,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Iterable",
								"package": "typescript"
							}
						},
						{
							"id": 185,
							"name": "eq",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 186,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 187,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Default comparer function is equiv to checking "
													},
													{
														"kind": "code",
														"text": "`a === b`"
													},
													{
														"kind": "text",
														"text": ".\nUse "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "isEqualValueDefault",
														"target": 145
													},
													{
														"kind": "text",
														"text": " to compare by value, via comparing JSON string representation."
													}
												]
											},
											"sources": [
												{
													"fileName": "is-equal.ts",
													"line": 29,
													"character": 30,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L29"
												}
											],
											"parameters": [
												{
													"id": 188,
													"name": "a",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 182,
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 189,
													"name": "b",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 182,
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 190,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 193,
									"name": "a",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "iterable-compare-values-shallow.ts",
											"line": 72,
											"character": 4,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L72"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 182,
											"name": "V",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									},
									"defaultValue": "aUnique"
								},
								{
									"id": 194,
									"name": "b",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "iterable-compare-values-shallow.ts",
											"line": 73,
											"character": 4,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L73"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 182,
											"name": "V",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									},
									"defaultValue": "bUnique"
								},
								{
									"id": 192,
									"name": "isSame",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "iterable-compare-values-shallow.ts",
											"line": 71,
											"character": 4,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L71"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 191,
									"name": "shared",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "iterable-compare-values-shallow.ts",
											"line": 70,
											"character": 4,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L70"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 182,
											"name": "V",
											"package": "@ixfx/core",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										193,
										194,
										192,
										191
									]
								}
							],
							"sources": [
								{
									"fileName": "iterable-compare-values-shallow.ts",
									"line": 69,
									"character": 9,
									"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/iterable-compare-values-shallow.ts#L69"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 16,
			"name": "comparerInverse",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 66,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L66"
				}
			],
			"signatures": [
				{
					"id": 17,
					"name": "comparerInverse",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inverts the source comparer."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "comparers.ts",
							"line": 66,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L66"
						}
					],
					"typeParameters": [
						{
							"id": 18,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 19,
							"name": "comparer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2,
								"typeArguments": [
									{
										"type": "reference",
										"target": 18,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "Comparer",
								"package": "@ixfx/core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 2,
						"typeArguments": [
							{
								"type": "reference",
								"target": 18,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Comparer",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 69,
			"name": "continuously",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "continuously.ts",
					"line": 220,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L220"
				}
			],
			"signatures": [
				{
					"id": 70,
					"name": "continuously",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Continuously",
								"target": 33
							},
							{
								"kind": "text",
								"text": " that continually executes "
							},
							{
								"kind": "code",
								"text": "`callback`"
							},
							{
								"kind": "text",
								"text": " at "
							},
							{
								"kind": "code",
								"text": "`interval`"
							},
							{
								"kind": "text",
								"text": " rate.\n\nBy default, first the sleep period happens and then the callback happens.\n\nCall "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " to begin/reset loop. The looping stops when "
							},
							{
								"kind": "code",
								"text": "`cancel`"
							},
							{
								"kind": "text",
								"text": " is called, or when "
							},
							{
								"kind": "code",
								"text": "`callback`"
							},
							{
								"kind": "text",
								"text": " returns _false_."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Animation loop\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst draw = () => {\n // Draw on canvas\n}\n\n// Run draw() synchronised with monitor refresh rate via `window.requestAnimationFrame`\ncontinuously(draw).start();\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "With delay\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst fn = () => {\n // Runs after one minute\n}\nconst c = continuously(fn, { mins: 1 } );\nc.start(); // Runs `fn` every minute\n```"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Control a 'continuously'\n"
									},
									{
										"kind": "code",
										"text": "```js\nc.cancel();   // Stop the loop, cancelling any up-coming calls to `fn`\nc.elapsedMs;  // How many milliseconds have elapsed since start\nc.ticks;      // How many iterations of loop since start\nc.interval;   // Get/set speed of loop. Change kicks-in at next loop.\n              // Use .start() to reset to new interval immediately\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAsynchronous callback functions are supported too:\n"
									},
									{
										"kind": "code",
										"text": "```js\ncontinuously(async () => { ..});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": " function can receive a few arguments:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\ncontinuously( (ticks, elapsedMs) => {\n // ticks: how many times loop has run\n // elapsedMs:  how long since last loop\n}).start();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf the callback explicitly returns _false_, the loop will be cancelled.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\ncontinuously(ticks => {\n // Stop after 100 iterations\n if (ticks > 100) return false;\n}).start();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nYou can intercept the logic for calls to "
									},
									{
										"kind": "code",
										"text": "`start()`"
									},
									{
										"kind": "text",
										"text": " with "
									},
									{
										"kind": "code",
										"text": "`onStartCalled`"
									},
									{
										"kind": "text",
										"text": ". It can determine\nwhether the "
									},
									{
										"kind": "code",
										"text": "`start()`"
									},
									{
										"kind": "text",
										"text": " proceeds, if the loop is cancelled, or the whole thing disposed,\nso it can't run any longer.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\ncontinuously(callback, intervalMs, {\n onStartCalled:(ticks, elapsedMs) => {\n   // Cancel the loop after 1000ms has elapsed\n   if (elapsedMs > 1000) return `cancel`;\n }\n}).start();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo run "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": " *before* the sleep happens, set "
									},
									{
										"kind": "code",
										"text": "`fireBeforeWait`"
									},
									{
										"kind": "text",
										"text": ":\n"
									},
									{
										"kind": "code",
										"text": "```js\ncontinuously(callback, intervalMs, { fireBeforeWait: true });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Instance to control looping."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "Flow.timeout if you want to trigger something once."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "continuously.ts",
							"line": 220,
							"character": 28,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/continuously.ts#L220"
						}
					],
					"parameters": [
						{
							"id": 71,
							"name": "callback",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to run. If it returns _false_, loop exits."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 54,
										"name": "ContinuouslyAsyncCallback",
										"package": "@ixfx/core"
									},
									{
										"type": "reference",
										"target": 49,
										"name": "ContinuouslySyncCallback",
										"package": "@ixfx/core"
									}
								]
							}
						},
						{
							"id": 72,
							"name": "interval",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Speed of loop (default: 0)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 353,
								"name": "Interval",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 73,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ContinuouslyOpts",
										"target": 60,
										"tsLinkText": "ContinuouslyOpts"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60,
										"name": "ContinuouslyOpts",
										"package": "@ixfx/core"
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 33,
						"name": "Continuously",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 20,
			"name": "defaultComparer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 89,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L89"
				}
			],
			"signatures": [
				{
					"id": 21,
					"name": "defaultComparer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Compares numbers by numeric value, otherwise uses the default\nlogic of string comparison.\n\nIs an ascending sort:\n* b, a, c -> a, b, c\n* 10, 5, 100 -> 5, 10, 100\n\nReturns -1 if x is less than y\nReturns 1 if x is greater than y\nReturns 0 if x is the same as y"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "comparerInverse",
										"target": 16
									},
									{
										"kind": "text",
										"text": " Inverted order"
									}
								]
							},
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "comparers.ts",
							"line": 89,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L89"
						}
					],
					"parameters": [
						{
							"id": 22,
							"name": "x",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 23,
							"name": "y",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 103,
			"name": "defaultKeyer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "default-keyer.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/default-keyer.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 104,
					"name": "defaultKeyer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If values are strings, uses that as the key.\nOtherwise uses "
							},
							{
								"kind": "code",
								"text": "`JSON.stringify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "default-keyer.ts",
							"line": 7,
							"character": 28,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/default-keyer.ts#L7"
						}
					],
					"typeParameters": [
						{
							"id": 105,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 106,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 105,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 226,
			"name": "defaultToString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "to-string.ts",
					"line": 21,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 227,
					"name": "defaultToString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "to-string.ts",
							"line": 21,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L21"
						}
					],
					"parameters": [
						{
							"id": 228,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 116,
			"name": "elapsedInfinity",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "elapsed.ts",
					"line": 107,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L107"
				}
			],
			"signatures": [
				{
					"id": 117,
					"name": "elapsedInfinity",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a function that reports an 'infinite' elapsed time.\nthis can be useful as an initialiser for "
							},
							{
								"kind": "code",
								"text": "`elapsedSince`"
							},
							{
								"kind": "text",
								"text": " et al.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Init clicked to be an infinite time\nlet clicked = elapsedInfinity();\n\ndocument.addEventListener('click', () => {\n // Now that click has happened, we can assign it properly\n clicked = Stopwatch.since();\n});\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "elapsed.ts",
							"line": 107,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L107"
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"name": "Since",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 112,
			"name": "elapsedInterval",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "elapsed.ts",
					"line": 56,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L56"
				}
			],
			"signatures": [
				{
					"id": 113,
					"name": "elapsedInterval",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the interval between the start and each subsequent call.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst interval = elapsedInterval();\ninterval(); // Time from elapsedInterval()\ninterval(); // Time since last interval() call\n```"
							},
							{
								"kind": "text",
								"text": "\n\nSee also:\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedSince",
								"target": 110
							},
							{
								"kind": "text",
								"text": ": time since first call\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedOnce",
								"target": 114
							},
							{
								"kind": "text",
								"text": ": time between two events"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "elapsed.ts",
							"line": 56,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L56"
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"name": "Since",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 114,
			"name": "elapsedOnce",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "elapsed.ts",
					"line": 82,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L82"
				}
			],
			"signatures": [
				{
					"id": 115,
					"name": "elapsedOnce",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns elapsed time since initial call, however\nunlike "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedSince",
								"target": 110
							},
							{
								"kind": "text",
								"text": ", timer stops when first invoked.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst elapsed = elapsedOnce();\n// ...do stuff\nelapsed(); // Yields time since elapsedOnce() was called\n// ...do more stuff\nelapsed(); // Is still the same number as above\n```"
							},
							{
								"kind": "text",
								"text": "\n\nSee also:\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedSince",
								"target": 110
							},
							{
								"kind": "text",
								"text": ": elapsed time\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedInterval",
								"target": 112
							},
							{
								"kind": "text",
								"text": ": time _between_ calls"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "elapsed.ts",
							"line": 82,
							"character": 27,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"name": "Since",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 110,
			"name": "elapsedSince",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "elapsed.ts",
					"line": 35,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 111,
					"name": "elapsedSince",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns elapsed time since the initial call.\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Record start\nconst elapsed = elapsedSince();\n\n// Get elapsed time in millis\n// since Elapsed.since()\nelapsed(); // Yields number\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIf you want to initialise a stopwatch, but not yet start it, consider:\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Init\nlet state = {\n clicked: Stopwatch.infinity()\n};\n\nstate.click(); // Returns a giant value\n\n// Later, when click happens:\nstate = { click: elapsedSince() }\n```"
							},
							{
								"kind": "text",
								"text": "\n\nSee also:\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedOnce",
								"target": 114
							},
							{
								"kind": "text",
								"text": " if you want to measure a single period, and stop it.\n* "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "elapsedInterval",
								"target": 112
							},
							{
								"kind": "text",
								"text": " time _between_ calls"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "elapsed.ts",
							"line": 35,
							"character": 28,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/elapsed.ts#L35"
						}
					],
					"type": {
						"type": "reference",
						"target": 107,
						"name": "Since",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 210,
			"name": "elapsedToHumanString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "interval-type.ts",
					"line": 92,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L92"
				}
			],
			"signatures": [
				{
					"id": 211,
					"name": "elapsedToHumanString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a human-readable representation\nof some elapsed milliseconds"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js\nelapsedToHumanString(10);      // `10ms`\nelapsedToHumanString(2000);    // `2s`\nelapsedToHumanString(65*1000); // `1mins`\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "interval-type.ts",
							"line": 92,
							"character": 36,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L92"
						}
					],
					"parameters": [
						{
							"id": 212,
							"name": "millisOrFunction",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Milliseconds as a number, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Interval",
										"target": 353
									},
									{
										"kind": "text",
										"text": " or function that resolve to a number"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 353,
										"name": "Interval",
										"package": "@ixfx/core"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 213,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "interval-type.ts",
													"line": 92,
													"character": 65,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L92"
												}
											],
											"signatures": [
												{
													"id": 214,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "interval-type.ts",
															"line": 92,
															"character": 65,
															"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L92"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 215,
							"name": "rounding",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rounding (default: 2)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 118,
			"name": "filterValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "filters.ts",
					"line": 18,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/filters.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 119,
					"name": "filterValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`v`"
							},
							{
								"kind": "text",
								"text": " if "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " returns _true_,\nalternatively returning "
							},
							{
								"kind": "code",
								"text": "`skipValue`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Return true if value is less than 10\nconst p = v => v < 10;\n\nfilterValue(5, p, 0);   // 5\nfilterValue(20, p, 0);  // 0\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Input value if predicate is _true_, or "
									},
									{
										"kind": "code",
										"text": "`skipValue`"
									},
									{
										"kind": "text",
										"text": " if not."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "filters.ts",
							"line": 18,
							"character": 27,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/filters.ts#L18"
						}
					],
					"typeParameters": [
						{
							"id": 120,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 121,
							"name": "v",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value to test"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 120,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 122,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Predicate"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 123,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "filters.ts",
											"line": 18,
											"character": 48,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/filters.ts#L18"
										}
									],
									"signatures": [
										{
											"id": 124,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "filters.ts",
													"line": 18,
													"character": 48,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/filters.ts#L18"
												}
											],
											"parameters": [
												{
													"id": 125,
													"name": "v",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 120,
														"name": "V",
														"package": "@ixfx/core",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 126,
							"name": "skipValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value to return if predicate returns false"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 120,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 120,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						]
					}
				}
			]
		},
		{
			"id": 251,
			"name": "hasLast",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "reactive-core.ts",
					"line": 14,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/reactive-core.ts#L14"
				}
			],
			"signatures": [
				{
					"id": 252,
					"name": "hasLast",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "reactive-core.ts",
							"line": 14,
							"character": 23,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/reactive-core.ts#L14"
						}
					],
					"typeParameters": [
						{
							"id": 253,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 254,
							"name": "rx",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "rx",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 404,
							"typeArguments": [
								{
									"type": "reference",
									"target": 253,
									"name": "V",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "ReactiveInitial",
							"package": "@ixfx/core"
						}
					}
				}
			]
		},
		{
			"id": 203,
			"name": "intervalToMs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "interval-type.ts",
					"line": 33,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L33"
				}
			],
			"signatures": [
				{
					"id": 204,
					"name": "intervalToMs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Return the millisecond value of an Interval.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nintervalToMs(100); // 100\nintervalToMs({ millis: 100 }); // 100\n```"
							},
							{
								"kind": "text",
								"text": "\n\nUse "
							},
							{
								"kind": "code",
								"text": "`defaultNumber`"
							},
							{
								"kind": "text",
								"text": " to return a default in the case of\n_undefined_ or invalid input.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nintervalToMs(undefined);      // throws error\nintervalToMs(undefined, 100); // 100\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIf no default is provided, an exception is thrown."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Milliseconds"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "interval-type.ts",
							"line": 33,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L33"
						}
					],
					"parameters": [
						{
							"id": 205,
							"name": "interval",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Interval"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 353,
										"name": "Interval",
										"package": "@ixfx/core"
									}
								]
							}
						},
						{
							"id": 206,
							"name": "defaultNumber",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default value if "
									},
									{
										"kind": "code",
										"text": "`interval`"
									},
									{
										"kind": "text",
										"text": " is _undefined_ or invalid"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 160,
			"name": "isEmptyEntries",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 128,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L128"
				}
			],
			"signatures": [
				{
					"id": 161,
					"name": "isEmptyEntries",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if Object.entries() is empty for "
							},
							{
								"kind": "code",
								"text": "`value`"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 128,
							"character": 30,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L128"
						}
					],
					"parameters": [
						{
							"id": 162,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 140,
			"name": "isEqualDefault",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 29,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L29"
				}
			],
			"signatures": [
				{
					"id": 141,
					"name": "isEqualDefault",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default comparer function is equiv to checking "
							},
							{
								"kind": "code",
								"text": "`a === b`"
							},
							{
								"kind": "text",
								"text": ".\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isEqualValueDefault",
								"target": 145
							},
							{
								"kind": "text",
								"text": " to compare by value, via comparing JSON string representation."
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 29,
							"character": 30,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L29"
						}
					],
					"typeParameters": [
						{
							"id": 142,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 143,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 142,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 144,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 142,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 127,
			"name": "isEqualTrace",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal-test.ts",
					"line": 16,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal-test.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 128,
					"name": "isEqualTrace",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wraps the "
							},
							{
								"kind": "code",
								"text": "`eq`"
							},
							{
								"kind": "text",
								"text": " function, tracing the input data result\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Init trace\nconst traceEq = isEqualTrace(isEqualValueDefault); \n// Use it in some function that takes IsEqual<T>\ncompare(a, b, eq);\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal-test.ts",
							"line": 16,
							"character": 28,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal-test.ts#L16"
						}
					],
					"typeParameters": [
						{
							"id": 129,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 130,
							"name": "eq",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 131,
								"typeArguments": [
									{
										"type": "reference",
										"target": 129,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "IsEqual",
								"package": "@ixfx/core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 131,
						"typeArguments": [
							{
								"type": "reference",
								"target": 129,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "IsEqual",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 145,
			"name": "isEqualValueDefault",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 49,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 146,
					"name": "isEqualValueDefault",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comparer returns true if string representation of "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " are equal.\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isEqualDefault",
								"target": 140
							},
							{
								"kind": "text",
								"text": " to compare using === semantics\nUses "
							},
							{
								"kind": "code",
								"text": "`toStringDefault`"
							},
							{
								"kind": "text",
								"text": " to generate a string representation (via "
							},
							{
								"kind": "code",
								"text": "`JSON.stringify`"
							},
							{
								"kind": "text",
								"text": ").\n\nReturns _false_ if the ordering of fields is different, even though values are identical:\n"
							},
							{
								"kind": "code",
								"text": "```js\nisEqualValueDefault({ a: 10, b: 20}, { b: 20, a: 10 }); // false\n```"
							},
							{
								"kind": "text",
								"text": "\n\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isEqualValueIgnoreOrder",
								"target": 155
							},
							{
								"kind": "text",
								"text": " to ignore order (with an overhead of additional processing).\n"
							},
							{
								"kind": "code",
								"text": "```js\nisEqualValueIgnoreOrder({ a: 10, b: 20}, { b: 20, a: 10 }); // true\n```"
							},
							{
								"kind": "text",
								"text": "\n\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isEqualValuePartial",
								"target": 150
							},
							{
								"kind": "text",
								"text": " to partially match "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " against "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the contents of "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " are equal"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 49,
							"character": 35,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L49"
						}
					],
					"typeParameters": [
						{
							"id": 147,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 148,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 147,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 149,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 147,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 155,
			"name": "isEqualValueIgnoreOrder",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 117,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L117"
				}
			],
			"signatures": [
				{
					"id": 156,
					"name": "isEqualValueIgnoreOrder",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comparer returns true if string representation of "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " are equal, regardless of field ordering.\nUses "
							},
							{
								"kind": "code",
								"text": "`toStringOrdered`"
							},
							{
								"kind": "text",
								"text": " to generate a string representation (via JSON.stringify`).\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nisEqualValueIgnoreOrder({ a: 10, b: 20}, { b: 20, a: 10 }); // true\nisEqualValue({ a: 10, b: 20}, { b: 20, a: 10 }); // false, fields are different order\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThere is an overhead to ordering fields. Use "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isEqualValueDefault",
								"target": 145
							},
							{
								"kind": "text",
								"text": " if it's not possible that field ordering will change."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the contents of "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " are equal"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 117,
							"character": 39,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L117"
						}
					],
					"typeParameters": [
						{
							"id": 157,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Type of objects being compared"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 158,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 157,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 159,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 157,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 150,
			"name": "isEqualValuePartial",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 81,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L81"
				}
			],
			"signatures": [
				{
					"id": 151,
					"name": "isEqualValuePartial",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " contains the values of "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " may contain other values, but we\nonly check against what is in "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": ". "
							},
							{
								"kind": "code",
								"text": "`a`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`b`"
							},
							{
								"kind": "text",
								"text": " must both be simple objects.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst obj = {\n name: `Elle`,\n size: 100,\n colour: {\n   red: 0.5,\n   green: 0.1,\n   blue: 0.2\n }\n}\n\nisEqualValuePartial(obj, { name: `Elle` }); // true\nisEqualValuePartial(obj, { name: { colour: red: { 0.5, green: 0.1  }} }); // true\n\nisEqualValuePartial(obj, { name: `Ellen` });     // false\nisEqualValuePartial(obj, { lastname: `Elle` });  // false\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 81,
							"character": 35,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L81"
						}
					],
					"parameters": [
						{
							"id": 152,
							"name": "a",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 153,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 154,
							"name": "fieldComparer",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 131,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "IsEqual",
								"package": "@ixfx/core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 171,
			"name": "isInteger",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-integer.ts",
					"line": 18,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-integer.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 172,
					"name": "isInteger",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is an integer. Parses string input, but\nall other data types return _false_.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nisInteger(1);      // true\nisInteger(1.1);    // false\nisInteger(`1`);    // true\nisInteger(`1.1`);  // false\nisInteger(true);   // false\nisInteger(false);  // false\n```"
							},
							{
								"kind": "text",
								"text": "\n\nReturns _false_ for _undefined_, NaN, booleans and infinite numbers."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-integer.ts",
							"line": 18,
							"character": 25,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-integer.ts#L18"
						}
					],
					"parameters": [
						{
							"id": 173,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 207,
			"name": "isInterval",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "interval-type.ts",
					"line": 57,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L57"
				}
			],
			"signatures": [
				{
					"id": 208,
					"name": "isInterval",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`interval`"
							},
							{
								"kind": "text",
								"text": " matches the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Interval",
								"target": 353
							},
							{
								"kind": "text",
								"text": " type."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "_True_ if "
									},
									{
										"kind": "code",
										"text": "`interval`"
									},
									{
										"kind": "text",
										"text": " is an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Interval",
										"target": 353
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "interval-type.ts",
							"line": 57,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/interval-type.ts#L57"
						}
					],
					"parameters": [
						{
							"id": 209,
							"name": "interval",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 353,
										"name": "Interval",
										"package": "@ixfx/core"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "interval",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 353,
							"name": "Interval",
							"package": "@ixfx/core"
						}
					}
				}
			]
		},
		{
			"id": 216,
			"name": "isMap",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "to-string.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L7"
				}
			],
			"signatures": [
				{
					"id": 217,
					"name": "isMap",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "to-string.ts",
							"line": 7,
							"character": 21,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L7"
						}
					],
					"parameters": [
						{
							"id": 218,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.es2015.collection.d.ts",
								"qualifiedName": "Map"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Map",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 174,
			"name": "isPrimitive",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-primitive.ts",
					"line": 11,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-primitive.ts#L11"
				}
			],
			"signatures": [
				{
					"id": 175,
					"name": "isPrimitive",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is number, string, bigint or boolean.\nReturns _false_ if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is an object, null, undefined\n\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isPrimitiveOrObject",
								"target": 177
							},
							{
								"kind": "text",
								"text": " to also return true if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is an object."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "_True_ if value is number, string, bigint or boolean."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "is-primitive.ts",
							"line": 11,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-primitive.ts#L11"
						}
					],
					"parameters": [
						{
							"id": 176,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Value to check"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 349,
							"name": "Primitive",
							"package": "@ixfx/core"
						}
					}
				}
			]
		},
		{
			"id": 177,
			"name": "isPrimitiveOrObject",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-primitive.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-primitive.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 178,
					"name": "isPrimitiveOrObject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is number, string, bigint, boolean or an object\n\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "isPrimitive",
								"target": 174
							},
							{
								"kind": "text",
								"text": " to not include objects."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-primitive.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-primitive.ts#L26"
						}
					],
					"parameters": [
						{
							"id": 179,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 350,
							"name": "PrimitiveOrObject",
							"package": "@ixfx/core"
						}
					}
				}
			]
		},
		{
			"id": 247,
			"name": "isReactive",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "reactive-core.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/reactive-core.ts#L8"
				}
			],
			"signatures": [
				{
					"id": 248,
					"name": "isReactive",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns _true_ if "
							},
							{
								"kind": "code",
								"text": "`rx`"
							},
							{
								"kind": "text",
								"text": " is a Reactive"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "reactive-core.ts",
							"line": 8,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/reactive-core.ts#L8"
						}
					],
					"typeParameters": [
						{
							"id": 249,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 250,
							"name": "rx",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "rx",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 419,
							"typeArguments": [
								{
									"type": "reference",
									"target": 249,
									"name": "V",
									"package": "@ixfx/core",
									"refersToTypeParameter": true
								}
							],
							"name": "Reactive",
							"package": "@ixfx/core"
						}
					}
				}
			]
		},
		{
			"id": 219,
			"name": "isSet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "to-string.ts",
					"line": 9,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 220,
					"name": "isSet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "to-string.ts",
							"line": 9,
							"character": 21,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L9"
						}
					],
					"parameters": [
						{
							"id": 221,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.es2015.collection.d.ts",
								"qualifiedName": "Set"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Set",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 12,
			"name": "jsComparer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 45,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L45"
				}
			],
			"signatures": [
				{
					"id": 13,
					"name": "jsComparer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default sort comparer, following same sematics as Array.sort.\nConsider using "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "defaultComparer",
								"target": 20
							},
							{
								"kind": "text",
								"text": " to get more logical sorting of numbers.\n\nNote: numbers are sorted in alphabetical order, eg:\n"
							},
							{
								"kind": "code",
								"text": "```js\n[ 10, 20, 5, 100 ].sort(jsComparer); // same as .sort()\n// Yields: [10, 100, 20, 5]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nReturns -1 if x is less than y\nReturns 1 if x is greater than y\nReturns 0 if x is the same as y"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "comparers.ts",
							"line": 45,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L45"
						}
					],
					"parameters": [
						{
							"id": 14,
							"name": "x",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 15,
							"name": "y",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 200,
			"name": "keyValueSorter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "key-value.ts",
					"line": 39,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/key-value.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 201,
					"name": "keyValueSorter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "key-value.ts",
							"line": 39,
							"character": 30,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/key-value.ts#L39"
						}
					],
					"parameters": [
						{
							"id": 202,
							"name": "sortStyle",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 199,
								"name": "KeyValueSortSyles",
								"package": "@ixfx/core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 195,
						"name": "KeyValueSorter",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 8,
			"name": "numericComparer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "comparers.ts",
					"line": 19,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 9,
					"name": "numericComparer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort numbers in ascending order.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n[10, 4, 5, 0].sort(numericComparer);\n// Yields: [0, 4, 5, 10]\n[10, 4, 5, 0].sort(comparerInverse(numericComparer));\n// Yields: [ 10, 5, 4, 0]\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "comparers.ts",
							"line": 19,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/comparers.ts#L19"
						}
					],
					"parameters": [
						{
							"id": 10,
							"name": "x",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 11,
							"name": "y",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 243,
			"name": "promiseFromEvent",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "promise-from-event.ts",
					"line": 1,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/promise-from-event.ts#L1"
				}
			],
			"signatures": [
				{
					"id": 244,
					"name": "promiseFromEvent",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "promise-from-event.ts",
							"line": 1,
							"character": 32,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/promise-from-event.ts#L1"
						}
					],
					"parameters": [
						{
							"id": 245,
							"name": "target",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "EventTarget"
								},
								"name": "EventTarget",
								"package": "typescript"
							}
						},
						{
							"id": 246,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 255,
			"name": "resolve",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 39,
					"character": 22,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 256,
					"name": "resolve",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resolves "
							},
							{
								"kind": "code",
								"text": "`r`"
							},
							{
								"kind": "text",
								"text": " to a value, where "
							},
							{
								"kind": "code",
								"text": "`r`"
							},
							{
								"kind": "text",
								"text": " is:\n* primitive value\n* a/sync function\n* a/sync generator/iterator\n* ReactiveNonInitial\n"
							},
							{
								"kind": "code",
								"text": "```js\nawait resolve(10);       // 10\nawait resolve(() => 10); // 10\nawait resole(async () => {\n sleep(100);\n return 10;\n});                // 10\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo resolve an object's properties, use "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "resolveFields",
								"target": 294
							},
							{
								"kind": "text",
								"text": ".\n\nResolve is not recursive. So if "
							},
							{
								"kind": "code",
								"text": "`r`"
							},
							{
								"kind": "text",
								"text": " is an object, it will be returned, even\nthough its properties may be resolvable."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 39,
							"character": 22,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L39"
						}
					],
					"typeParameters": [
						{
							"id": 257,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 351,
								"name": "BasicType",
								"package": "@ixfx/core"
							}
						}
					],
					"parameters": [
						{
							"id": 258,
							"name": "r",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 287,
								"typeArguments": [
									{
										"type": "reference",
										"target": 257,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveToValue",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 259,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 257,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 294,
			"name": "resolveFields",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-fields.ts",
					"line": 59,
					"character": 22,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L59"
				}
			],
			"signatures": [
				{
					"id": 295,
					"name": "resolveFields",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a copy of "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": ", with the same properties. For each property\nthat has a basic value (string, number, boolean, object), the value is set\nfor the return object. If the property is a function or generator, its value\nis used instead. Async functions and generators are also usable.\n\nUse "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "resolveFieldsSync",
								"target": 298
							},
							{
								"kind": "text",
								"text": " for a synchronous version.\n\nNot recursive.\n\nIn the below example, the function for the property "
							},
							{
								"kind": "code",
								"text": "`random`"
							},
							{
								"kind": "text",
								"text": " is invoked.\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst state = {\n length: 10,\n random: () => Math.random();\n}\nconst x = resolveFields(state);\n// { length: 10, random: 0.1235 }\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIt also works with generators\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { count } from './numbers.js';\n\nconst state = {\n length: 10,\n index: count(2) // Generator that yields: 0, 1 and then ends\n}\nresolveFields(state); // { length: 10, index: 0 }\nresolveFields(state); // { length: 10, index: 1 }\n// Generator finishes after counting twice:\nresolveFields(state); // { length: 10, index: undefined }\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "resolve-fields.ts",
							"line": 59,
							"character": 22,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L59"
						}
					],
					"typeParameters": [
						{
							"id": 296,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 287,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ResolveToValue",
										"package": "@ixfx/core"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 297,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 296,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 302,
								"typeArguments": [
									{
										"type": "reference",
										"target": 296,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolvedObject",
								"package": "@ixfx/core"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 298,
			"name": "resolveFieldsSync",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-fields.ts",
					"line": 72,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 299,
					"name": "resolveFieldsSync",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "resolve-fields.ts",
							"line": 72,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-fields.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 300,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 287,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ResolveToValue",
										"package": "@ixfx/core"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 301,
							"name": "object",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 300,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 302,
						"typeArguments": [
							{
								"type": "reference",
								"target": 300,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ResolvedObject",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 260,
			"name": "resolveSync",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 71,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L71"
				}
			],
			"signatures": [
				{
					"id": 261,
					"name": "resolveSync",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 71,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L71"
						}
					],
					"typeParameters": [
						{
							"id": 262,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 351,
								"name": "BasicType",
								"package": "@ixfx/core"
							}
						}
					],
					"parameters": [
						{
							"id": 263,
							"name": "r",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 277,
								"typeArguments": [
									{
										"type": "reference",
										"target": 262,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveToValueSync",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 264,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 262,
						"name": "V",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 265,
			"name": "resolveWithFallback",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 120,
					"character": 22,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L120"
				}
			],
			"signatures": [
				{
					"id": 266,
					"name": "resolveWithFallback",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resolves a value as per "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "resolve",
								"target": 255
							},
							{
								"kind": "text",
								"text": ", however\nIf an error is thrown or the resolution results in _undefined_ \nor NaN, "
							},
							{
								"kind": "code",
								"text": "`fallbackValue`"
							},
							{
								"kind": "text",
								"text": " is returned instead.\n\n"
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " is an allowed return value.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Function returns undefined 50% of the time or 0\nconst fn = () => {\n if (Math.random() >= 0.5) return; // undefined\n return 0;\n}\nconst r = resolveWithFallback(fn, 1);\nconst value = r(); // Always 0 or 1\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 120,
							"character": 22,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L120"
						}
					],
					"typeParameters": [
						{
							"id": 267,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 351,
								"name": "BasicType",
								"package": "@ixfx/core"
							}
						}
					],
					"parameters": [
						{
							"id": 268,
							"name": "p",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Thing to resolve"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 287,
								"typeArguments": [
									{
										"type": "reference",
										"target": 267,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveToValue",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 269,
							"name": "fallback",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fallback value if an error happens, undefined or NaN"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 267,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveFallbackOpts",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 270,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 267,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 271,
			"name": "resolveWithFallbackSync",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "resolve-core.ts",
					"line": 141,
					"character": 16,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L141"
				}
			],
			"signatures": [
				{
					"id": 272,
					"name": "resolveWithFallbackSync",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "resolve-core.ts",
							"line": 141,
							"character": 16,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/resolve-core.ts#L141"
						}
					],
					"typeParameters": [
						{
							"id": 273,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 351,
								"name": "BasicType",
								"package": "@ixfx/core"
							}
						}
					],
					"parameters": [
						{
							"id": 274,
							"name": "p",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 277,
								"typeArguments": [
									{
										"type": "reference",
										"target": 273,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveToValueSync",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 275,
							"name": "fallback",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 273,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ResolveFallbackOpts",
								"package": "@ixfx/core"
							}
						},
						{
							"id": 276,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 273,
						"name": "T",
						"package": "@ixfx/core",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 241,
			"name": "runningiOS",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "platform.ts",
					"line": 2,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/platform.ts#L2"
				}
			],
			"signatures": [
				{
					"id": 242,
					"name": "runningiOS",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "platform.ts",
							"line": 2,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/platform.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 313,
			"name": "sleep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "sleep.ts",
					"line": 62,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 314,
					"name": "sleep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns after timeout period."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"name": "In an async function",
								"content": [
									{
										"kind": "code",
										"text": "```js\nconsole.log(`Hello`);\nawait sleep(1000);\nconsole.log(`There`); // Prints one second after\n```"
									}
								]
							},
							{
								"tag": "@example",
								"name": "As a promise",
								"content": [
									{
										"kind": "code",
										"text": "```js\nconsole.log(`Hello`);\nsleep({ millis: 1000 })\n .then(() => console.log(`There`)); // Prints one second after\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf a timeout of 0 is given, "
									},
									{
										"kind": "code",
										"text": "`requestAnimationFrame`"
									},
									{
										"kind": "text",
										"text": " is used instead of "
									},
									{
										"kind": "code",
										"text": "`setTimeout`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "`Flow.delay()`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "sleep",
										"target": 313
									},
									{
										"kind": "text",
										"text": " are similar. "
									},
									{
										"kind": "code",
										"text": "`Flow.delay()`"
									},
									{
										"kind": "text",
										"text": " takes a parameter of what code to execute after the timeout, while "
									},
									{
										"kind": "code",
										"text": "`sleep()`"
									},
									{
										"kind": "text",
										"text": " just resolves after the timeout.\n\nA value can be provided, which is returned on awaking:\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst v = await sleep({ seconds: 1, value: `hello`);\n// v = `hello`\n```"
									},
									{
										"kind": "text",
										"text": "\n\nProvide an AbortSignal to cancel the sleep and throwing an exception\nso code after the sleep doesn't happen.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst ac = new AbortController();\nsetTimeout(() => { ac.abort(); }, 1000); // Abort after 1s\n\n// Sleep for 1min\nawait sleep({ minutes: 1, signal: ac.signal });\nconsole.log(`Awake`); // This line doesn't get called because an exception is thrown when aborting\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "sleep.ts",
							"line": 62,
							"character": 21,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L62"
						}
					],
					"typeParameters": [
						{
							"id": 315,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 316,
							"name": "optsOrMillis",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Milliseconds to sleep, or options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 308,
								"typeArguments": [
									{
										"type": "reference",
										"target": 315,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "SleepOpts",
								"package": "@ixfx/core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 315,
										"name": "V",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								]
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 317,
			"name": "sleepWhile",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "sleep.ts",
					"line": 114,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L114"
				}
			],
			"signatures": [
				{
					"id": 318,
					"name": "sleepWhile",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Delays until "
							},
							{
								"kind": "code",
								"text": "`predicate`"
							},
							{
								"kind": "text",
								"text": " returns true.\nCan be useful for synchronising with other async activities.\n"
							},
							{
								"kind": "code",
								"text": "```js\n// Delay until 'count' reaches 5\nawait sleepWhile(() => count >= 5, 100);\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "sleep.ts",
							"line": 114,
							"character": 26,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L114"
						}
					],
					"parameters": [
						{
							"id": 319,
							"name": "predicate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 320,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "sleep.ts",
											"line": 114,
											"character": 44,
											"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L114"
										}
									],
									"signatures": [
										{
											"id": 321,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "sleep.ts",
													"line": 114,
													"character": 44,
													"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/sleep.ts#L114"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 322,
							"name": "checkInterval",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 353,
								"name": "Interval",
								"package": "@ixfx/core"
							},
							"defaultValue": "100"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 222,
			"name": "toStringDefault",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "to-string.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L15"
				}
			],
			"signatures": [
				{
					"id": 223,
					"name": "toStringDefault",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A default converter to string that uses JSON.stringify if its an object, or the thing itself if it's a string"
							}
						]
					},
					"sources": [
						{
							"fileName": "to-string.ts",
							"line": 15,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/to-string.ts#L15"
						}
					],
					"typeParameters": [
						{
							"id": 224,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 225,
							"name": "itemToMakeStringFor",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 224,
								"name": "V",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 137,
			"name": "toStringOrdered",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "is-equal.ts",
					"line": 16,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 138,
					"name": "toStringOrdered",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If input is a string, it is returned.\nOtherwise, it returns the result of JSON.stringify() with fields ordered.\n\nThis allows for more consistent comparisons when object field orders are different but values the same."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "is-equal.ts",
							"line": 16,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/is-equal.ts#L16"
						}
					],
					"parameters": [
						{
							"id": 139,
							"name": "itemToMakeStringFor",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 234,
			"name": "unique",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "track-unique.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 235,
					"name": "unique",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tracks unique values. Returns _true_ if value is unique.\nAlternatively: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "uniqueInstances",
								"target": 238
							},
							{
								"kind": "text",
								"text": "\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst t = unique();\nt(`hello`); // true\nt(`hello`); // false\n```"
							},
							{
								"kind": "text",
								"text": "\n\nUses JSON.stringify to compare anything which is not a string.\n\nProvide a custom function to convert to string to track uniqueness\nfor more complicated objects.\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nconst t = unique(p => p.name);\nt({ name:`John`, level:2 }); // true\n\n// Since we're judging uniques by name only\nt({ name:`John`, level:3 }); // false\n```"
							},
							{
								"kind": "text",
								"text": "\n\nReturn function throws an error if "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " is null or undefined."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "track-unique.ts",
							"line": 31,
							"character": 22,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L31"
						}
					],
					"typeParameters": [
						{
							"id": 236,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 237,
							"name": "toString",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 343,
								"typeArguments": [
									{
										"type": "reference",
										"target": 236,
										"name": "T",
										"package": "@ixfx/core",
										"refersToTypeParameter": true
									}
								],
								"name": "ToString",
								"package": "@ixfx/core"
							},
							"defaultValue": "toStringDefault"
						}
					],
					"type": {
						"type": "reference",
						"target": 229,
						"typeArguments": [
							{
								"type": "reference",
								"target": 236,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "TrackUnique",
						"package": "@ixfx/core"
					}
				}
			]
		},
		{
			"id": 238,
			"name": "uniqueInstances",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "track-unique.ts",
					"line": 49,
					"character": 13,
					"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 239,
					"name": "uniqueInstances",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tracks unique object instances. Returns _true_ if value is unique.\nAlternatively: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "unique",
								"target": 234
							},
							{
								"kind": "text",
								"text": " to track by value."
							}
						]
					},
					"sources": [
						{
							"fileName": "track-unique.ts",
							"line": 49,
							"character": 31,
							"url": "https://github.com/ClintH/ixfx/blob/e009c8be4a15058f8c935f90d26f7bc5bbc06afe/packages/core/src/track-unique.ts#L49"
						}
					],
					"typeParameters": [
						{
							"id": 240,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 229,
						"typeArguments": [
							{
								"type": "reference",
								"target": 240,
								"name": "T",
								"package": "@ixfx/core",
								"refersToTypeParameter": true
							}
						],
						"name": "TrackUnique",
						"package": "@ixfx/core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Type Aliases",
			"children": [
				80,
				391,
				390,
				351,
				442,
				443,
				445,
				2,
				1,
				33,
				54,
				60,
				49,
				84,
				336,
				393,
				25,
				24,
				359,
				353,
				131,
				163,
				370,
				352,
				195,
				199,
				59,
				413,
				349,
				350,
				376,
				379,
				385,
				419,
				404,
				399,
				328,
				326,
				323,
				331,
				338,
				302,
				289,
				287,
				282,
				277,
				341,
				412,
				74,
				107,
				308,
				348,
				343,
				229,
				409,
				334
			]
		},
		{
			"title": "Variables",
			"children": [
				170
			]
		},
		{
			"title": "Functions",
			"children": [
				88,
				95,
				180,
				16,
				69,
				20,
				103,
				226,
				116,
				112,
				114,
				110,
				210,
				118,
				251,
				203,
				160,
				140,
				127,
				145,
				155,
				150,
				171,
				207,
				216,
				174,
				177,
				247,
				219,
				12,
				200,
				8,
				243,
				255,
				294,
				298,
				260,
				265,
				271,
				241,
				313,
				317,
				222,
				137,
				234,
				238
			]
		}
	],
	"packageName": "@ixfx/core",
	"packageVersion": "0.38.0",
	"symbolIdMap": {
		"0": {
			"packageName": "@ixfx/core",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "CompareResult"
		},
		"2": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "Comparer"
		},
		"3": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "__type"
		},
		"4": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "__type"
		},
		"5": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "a"
		},
		"6": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "b"
		},
		"7": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "V"
		},
		"8": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "numericComparer"
		},
		"9": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "numericComparer"
		},
		"10": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "x"
		},
		"11": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "y"
		},
		"12": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "jsComparer"
		},
		"13": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "jsComparer"
		},
		"14": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "x"
		},
		"15": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "y"
		},
		"16": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "comparerInverse"
		},
		"17": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "comparerInverse"
		},
		"18": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "V"
		},
		"19": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "comparer"
		},
		"20": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "defaultComparer"
		},
		"21": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "defaultComparer"
		},
		"22": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "x"
		},
		"23": {
			"packageName": "@ixfx/core",
			"packagePath": "src/comparers.ts",
			"qualifiedName": "y"
		},
		"24": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "HasCompletionRunStates"
		},
		"25": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "HasCompletion"
		},
		"27": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.runState"
		},
		"28": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.runState"
		},
		"29": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.startCount"
		},
		"30": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.startCount"
		},
		"31": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.startCountTotal"
		},
		"32": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.startCountTotal"
		},
		"33": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "Continuously"
		},
		"34": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"35": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.start"
		},
		"36": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.start"
		},
		"37": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.reset"
		},
		"38": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.reset"
		},
		"39": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.elapsedMs"
		},
		"40": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.elapsedMs"
		},
		"41": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.isDisposed"
		},
		"42": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.isDisposed"
		},
		"43": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.cancel"
		},
		"44": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.cancel"
		},
		"45": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.interval"
		},
		"46": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.interval"
		},
		"47": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.interval"
		},
		"48": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "interval"
		},
		"49": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ContinuouslySyncCallback"
		},
		"50": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"52": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ticks"
		},
		"53": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "elapsedMs"
		},
		"54": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ContinuouslyAsyncCallback"
		},
		"55": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"56": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"57": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ticks"
		},
		"58": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "elapsedMs"
		},
		"59": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "OnStartCalled"
		},
		"60": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ContinuouslyOpts"
		},
		"61": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.signal"
		},
		"63": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.fireBeforeWait"
		},
		"64": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type.onStartCalled"
		},
		"65": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "__type"
		},
		"67": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "ticks"
		},
		"68": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "elapsedMs"
		},
		"69": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "continuously"
		},
		"70": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "continuously"
		},
		"71": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "callback"
		},
		"72": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "interval"
		},
		"73": {
			"packageName": "@ixfx/core",
			"packagePath": "src/continuously.ts",
			"qualifiedName": "options"
		},
		"74": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "Similarity"
		},
		"75": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type"
		},
		"76": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type"
		},
		"77": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "a"
		},
		"78": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "b"
		},
		"79": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "V"
		},
		"80": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "AlignOpts"
		},
		"82": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type.matchThreshold"
		},
		"83": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type.debug"
		},
		"84": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "DataWithId"
		},
		"85": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type"
		},
		"86": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__type.id"
		},
		"87": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "V"
		},
		"88": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "align"
		},
		"89": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "align"
		},
		"90": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "V"
		},
		"91": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "similarityFunction"
		},
		"92": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "lastData"
		},
		"93": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "newData"
		},
		"94": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "options"
		},
		"95": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "alignById"
		},
		"96": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "alignById"
		},
		"97": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "V"
		},
		"98": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "fn"
		},
		"99": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "options"
		},
		"100": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__function"
		},
		"101": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "__function"
		},
		"102": {
			"packageName": "@ixfx/core",
			"packagePath": "src/correlate.ts",
			"qualifiedName": "newData"
		},
		"103": {
			"packageName": "@ixfx/core",
			"packagePath": "src/default-keyer.ts",
			"qualifiedName": "defaultKeyer"
		},
		"104": {
			"packageName": "@ixfx/core",
			"packagePath": "src/default-keyer.ts",
			"qualifiedName": "defaultKeyer"
		},
		"105": {
			"packageName": "@ixfx/core",
			"packagePath": "src/default-keyer.ts",
			"qualifiedName": "V"
		},
		"106": {
			"packageName": "@ixfx/core",
			"packagePath": "src/default-keyer.ts",
			"qualifiedName": "a"
		},
		"107": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "Since"
		},
		"108": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "__type"
		},
		"110": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedSince"
		},
		"111": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedSince"
		},
		"112": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedInterval"
		},
		"113": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedInterval"
		},
		"114": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedOnce"
		},
		"115": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedOnce"
		},
		"116": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedInfinity"
		},
		"117": {
			"packageName": "@ixfx/core",
			"packagePath": "src/elapsed.ts",
			"qualifiedName": "elapsedInfinity"
		},
		"118": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "filterValue"
		},
		"119": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "filterValue"
		},
		"120": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "V"
		},
		"121": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "v"
		},
		"122": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "predicate"
		},
		"123": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "__type"
		},
		"124": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "__type"
		},
		"125": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "v"
		},
		"126": {
			"packageName": "@ixfx/core",
			"packagePath": "src/filters.ts",
			"qualifiedName": "skipValue"
		},
		"127": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal-test.ts",
			"qualifiedName": "isEqualTrace"
		},
		"128": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal-test.ts",
			"qualifiedName": "isEqualTrace"
		},
		"129": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal-test.ts",
			"qualifiedName": "T"
		},
		"130": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal-test.ts",
			"qualifiedName": "eq"
		},
		"131": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "IsEqual"
		},
		"132": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "__type"
		},
		"133": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "__type"
		},
		"134": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"135": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"136": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "T"
		},
		"137": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "toStringOrdered"
		},
		"138": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "toStringOrdered"
		},
		"139": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "itemToMakeStringFor"
		},
		"140": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualDefault"
		},
		"141": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualDefault"
		},
		"142": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "T"
		},
		"143": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"144": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"145": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValueDefault"
		},
		"146": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValueDefault"
		},
		"147": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "T"
		},
		"148": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"149": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"150": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValuePartial"
		},
		"151": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValuePartial"
		},
		"152": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"153": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"154": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "fieldComparer"
		},
		"155": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValueIgnoreOrder"
		},
		"156": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualValueIgnoreOrder"
		},
		"157": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "T"
		},
		"158": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"159": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"160": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEmptyEntries"
		},
		"161": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEmptyEntries"
		},
		"162": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "value"
		},
		"163": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "IsEqualContext"
		},
		"164": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "__type"
		},
		"165": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "__type"
		},
		"166": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"167": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"168": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "path"
		},
		"169": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "V"
		},
		"170": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "isEqualContextString"
		},
		"171": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-integer.ts",
			"qualifiedName": "isInteger"
		},
		"172": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-integer.ts",
			"qualifiedName": "isInteger"
		},
		"173": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-integer.ts",
			"qualifiedName": "value"
		},
		"174": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "isPrimitive"
		},
		"175": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "isPrimitive"
		},
		"176": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "value"
		},
		"177": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "isPrimitiveOrObject"
		},
		"178": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "isPrimitiveOrObject"
		},
		"179": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-primitive.ts",
			"qualifiedName": "value"
		},
		"180": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "compareIterableValuesShallow"
		},
		"181": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "compareIterableValuesShallow"
		},
		"182": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "V"
		},
		"183": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "a"
		},
		"184": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "b"
		},
		"185": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "eq"
		},
		"186": {
			"packageName": "@ixfx/core",
			"packagePath": "",
			"qualifiedName": "__instantiationExpression"
		},
		"187": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "__instantiationExpression"
		},
		"188": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "a"
		},
		"189": {
			"packageName": "@ixfx/core",
			"packagePath": "src/is-equal.ts",
			"qualifiedName": "b"
		},
		"190": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "__object"
		},
		"191": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "__object.shared"
		},
		"192": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "__object.isSame"
		},
		"193": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "__object.a"
		},
		"194": {
			"packageName": "@ixfx/core",
			"packagePath": "src/iterable-compare-values-shallow.ts",
			"qualifiedName": "__object.b"
		},
		"195": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "KeyValueSorter"
		},
		"196": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "__type"
		},
		"198": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "data"
		},
		"199": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "KeyValueSortSyles"
		},
		"200": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "keyValueSorter"
		},
		"201": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "keyValueSorter"
		},
		"202": {
			"packageName": "@ixfx/core",
			"packagePath": "src/key-value.ts",
			"qualifiedName": "sortStyle"
		},
		"203": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "intervalToMs"
		},
		"204": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "intervalToMs"
		},
		"205": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "interval"
		},
		"206": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "defaultNumber"
		},
		"207": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "isInterval"
		},
		"208": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "isInterval"
		},
		"209": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "interval"
		},
		"210": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "elapsedToHumanString"
		},
		"211": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "elapsedToHumanString"
		},
		"212": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "millisOrFunction"
		},
		"213": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "__type"
		},
		"214": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "__type"
		},
		"215": {
			"packageName": "@ixfx/core",
			"packagePath": "src/interval-type.ts",
			"qualifiedName": "rounding"
		},
		"216": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "isMap"
		},
		"217": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "isMap"
		},
		"218": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "value"
		},
		"219": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "isSet"
		},
		"220": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "isSet"
		},
		"221": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "value"
		},
		"222": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "toStringDefault"
		},
		"223": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "toStringDefault"
		},
		"224": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "V"
		},
		"225": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "itemToMakeStringFor"
		},
		"226": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "defaultToString"
		},
		"227": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "defaultToString"
		},
		"228": {
			"packageName": "@ixfx/core",
			"packagePath": "src/to-string.ts",
			"qualifiedName": "object"
		},
		"229": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "TrackUnique"
		},
		"230": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "__type"
		},
		"231": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "value"
		},
		"233": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "T"
		},
		"234": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "unique"
		},
		"235": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "unique"
		},
		"236": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "T"
		},
		"237": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "toString"
		},
		"238": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "uniqueInstances"
		},
		"239": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "uniqueInstances"
		},
		"240": {
			"packageName": "@ixfx/core",
			"packagePath": "src/track-unique.ts",
			"qualifiedName": "T"
		},
		"241": {
			"packageName": "@ixfx/core",
			"packagePath": "src/platform.ts",
			"qualifiedName": "runningiOS"
		},
		"242": {
			"packageName": "@ixfx/core",
			"packagePath": "src/platform.ts",
			"qualifiedName": "runningiOS"
		},
		"243": {
			"packageName": "@ixfx/core",
			"packagePath": "src/promise-from-event.ts",
			"qualifiedName": "promiseFromEvent"
		},
		"244": {
			"packageName": "@ixfx/core",
			"packagePath": "src/promise-from-event.ts",
			"qualifiedName": "promiseFromEvent"
		},
		"245": {
			"packageName": "@ixfx/core",
			"packagePath": "src/promise-from-event.ts",
			"qualifiedName": "target"
		},
		"246": {
			"packageName": "@ixfx/core",
			"packagePath": "src/promise-from-event.ts",
			"qualifiedName": "name"
		},
		"247": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "isReactive"
		},
		"248": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "isReactive"
		},
		"249": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "V"
		},
		"250": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "rx"
		},
		"251": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "hasLast"
		},
		"252": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "hasLast"
		},
		"253": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "V"
		},
		"254": {
			"packageName": "@ixfx/core",
			"packagePath": "src/reactive-core.ts",
			"qualifiedName": "rx"
		},
		"255": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolve"
		},
		"256": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolve"
		},
		"257": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "V"
		},
		"258": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "r"
		},
		"259": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"260": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveSync"
		},
		"261": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveSync"
		},
		"262": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "V"
		},
		"263": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "r"
		},
		"264": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"265": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveWithFallback"
		},
		"266": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveWithFallback"
		},
		"267": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "T"
		},
		"268": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "p"
		},
		"269": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "fallback"
		},
		"270": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"271": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveWithFallbackSync"
		},
		"272": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "resolveWithFallbackSync"
		},
		"273": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "T"
		},
		"274": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "p"
		},
		"275": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "fallback"
		},
		"276": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"277": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "ResolveToValueSync"
		},
		"278": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type"
		},
		"279": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type"
		},
		"280": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"281": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "V"
		},
		"282": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "ResolveToValueAsync"
		},
		"283": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type"
		},
		"285": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "args"
		},
		"286": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "V"
		},
		"287": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "ResolveToValue"
		},
		"288": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "V"
		},
		"289": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "ResolveFallbackOpts"
		},
		"291": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type.value"
		},
		"292": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "__type.overrideWithLast"
		},
		"293": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-core.ts",
			"qualifiedName": "T"
		},
		"294": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "resolveFields"
		},
		"295": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "resolveFields"
		},
		"296": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "T"
		},
		"297": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "object"
		},
		"298": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "resolveFieldsSync"
		},
		"299": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "resolveFieldsSync"
		},
		"300": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "T"
		},
		"301": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "object"
		},
		"302": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "ResolvedObject"
		},
		"303": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "__type"
		},
		"305": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "__type"
		},
		"306": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"packageName": "@ixfx/core",
			"packagePath": "src/resolve-fields.ts",
			"qualifiedName": "T"
		},
		"308": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "SleepOpts"
		},
		"309": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "__type"
		},
		"310": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "__type.signal"
		},
		"311": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "__type.value"
		},
		"312": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "V"
		},
		"313": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "sleep"
		},
		"314": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "sleep"
		},
		"315": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "V"
		},
		"316": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "optsOrMillis"
		},
		"317": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "sleepWhile"
		},
		"318": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "sleepWhile"
		},
		"319": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "predicate"
		},
		"320": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "__type"
		},
		"321": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "__type"
		},
		"322": {
			"packageName": "@ixfx/core",
			"packagePath": "src/sleep.ts",
			"qualifiedName": "checkInterval"
		},
		"323": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "RecursiveReplace"
		},
		"324": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "TShape"
		},
		"325": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "TFieldValue"
		},
		"326": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "RecursivePartial"
		},
		"327": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "T"
		},
		"328": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "ReadonlyRemapObjectPropertyType"
		},
		"329": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "OriginalType"
		},
		"330": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "PropertyType"
		},
		"331": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "RemapObjectPropertyType"
		},
		"332": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "OriginalType"
		},
		"333": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "PropertyType"
		},
		"334": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "Writeable"
		},
		"335": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "T"
		},
		"336": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "DeepWriteable"
		},
		"337": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "T"
		},
		"338": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "RequireOnlyOne"
		},
		"339": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "T"
		},
		"340": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "Keys"
		},
		"341": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "Rest"
		},
		"342": {
			"packageName": "@ixfx/core",
			"packagePath": "src/ts-utility.ts",
			"qualifiedName": "T"
		},
		"343": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "ToString"
		},
		"344": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"345": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "itemToMakeStringFor"
		},
		"347": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "V"
		},
		"348": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "StringOrNumber"
		},
		"349": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "Primitive"
		},
		"350": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "PrimitiveOrObject"
		},
		"351": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "BasicType"
		},
		"352": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "KeyValue"
		},
		"353": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "Interval"
		},
		"354": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"355": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.millis"
		},
		"356": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.secs"
		},
		"357": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.hours"
		},
		"358": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.mins"
		},
		"359": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "IDictionary"
		},
		"361": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.get"
		},
		"362": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.get"
		},
		"363": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "key"
		},
		"364": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.set"
		},
		"365": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.set"
		},
		"366": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "key"
		},
		"367": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "value"
		},
		"368": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "K"
		},
		"369": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "V"
		},
		"370": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "IWithEntries"
		},
		"372": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.entries"
		},
		"373": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.entries"
		},
		"374": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "K"
		},
		"375": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "V"
		},
		"376": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "RankArrayOptions"
		},
		"377": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"378": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.withinArrays"
		},
		"379": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "RankFunction"
		},
		"380": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"381": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type"
		},
		"382": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "a"
		},
		"383": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "b"
		},
		"384": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "T"
		},
		"385": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "RankOptions"
		},
		"387": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.includeType"
		},
		"388": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.emitEqualRanked"
		},
		"389": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types.ts",
			"qualifiedName": "__type.emitRepeatHighest"
		},
		"390": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "ArrayLengthMutationKeys"
		},
		"391": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "ArrayItems"
		},
		"392": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "T"
		},
		"393": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "FixedLengthArray"
		},
		"394": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "__type"
		},
		"395": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "__type.[iterator]"
		},
		"396": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "__type"
		},
		"398": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-array.ts",
			"qualifiedName": "T"
		},
		"399": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "ReactiveNonInitial"
		},
		"400": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"401": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.last"
		},
		"402": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.last"
		},
		"403": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "V"
		},
		"404": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "ReactiveInitial"
		},
		"405": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"406": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.last"
		},
		"407": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.last"
		},
		"408": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "V"
		},
		"409": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "Unsubscriber"
		},
		"410": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"411": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"412": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "SignalKinds"
		},
		"413": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "Passed"
		},
		"415": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.value"
		},
		"416": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.signal"
		},
		"417": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.context"
		},
		"418": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "V"
		},
		"419": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "Reactive"
		},
		"421": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.on"
		},
		"422": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.on"
		},
		"423": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "handler"
		},
		"424": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"425": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"426": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "value"
		},
		"427": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.onValue"
		},
		"428": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.onValue"
		},
		"429": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "handler"
		},
		"430": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type"
		},
		"432": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "value"
		},
		"433": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.dispose"
		},
		"434": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.dispose"
		},
		"435": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "reason"
		},
		"436": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.isDisposed"
		},
		"437": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.isDisposed"
		},
		"438": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.set"
		},
		"439": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "__type.set"
		},
		"440": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "value"
		},
		"441": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-reactive.ts",
			"qualifiedName": "V"
		},
		"442": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "ChangeKind"
		},
		"443": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "ChangeRecord"
		},
		"444": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "TKey"
		},
		"445": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "CompareChangeSet"
		},
		"447": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.hasChanged"
		},
		"448": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.children"
		},
		"449": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.changed"
		},
		"450": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.added"
		},
		"451": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.removed"
		},
		"452": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.isArray"
		},
		"453": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "__type.summary"
		},
		"454": {
			"packageName": "@ixfx/core",
			"packagePath": "src/types-compare.ts",
			"qualifiedName": "TKey"
		}
	},
	"files": {
		"entries": {
			"1": "src/index.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
