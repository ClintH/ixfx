import{g as s}from"./Grid.1cf73ea1.js";const e=(i,r,n)=>(s(i),{x:i.x+r*Math.cos(n),y:i.y+r*Math.sin(n)}),h=i=>i.startRadian!==void 0&&i.endRadian!==void 0,N=i=>i.x!==void 0&&i.y!==void 0,v=i=>{if(i===void 0)throw new Error("Arc is undefined");if(N(i)&&s(i,"arc"),i.radius===void 0)throw new Error("Radius undefined");if(typeof i.radius!="number")throw new Error("Radius must be a number");if(Number.isNaN(i.radius))throw new Error("Radius is NaN");if(i.radius<=0)throw new Error("Radius must be greater than zero");if(i.startRadian===void 0)throw new Error("Arc is missing 'startRadian' field");if(i.endRadian===void 0)throw new Error("Arc is missing 'startRadian' field");if(Number.isNaN(i.endRadian))throw new Error("Arc endRadian is NaN");if(Number.isNaN(i.startRadian))throw new Error("Arc endRadian is NaN");if(i.startRadian>=i.endRadian)throw new Error("startRadian is expected to be les than endRadian")},E=(i,r,n,t)=>{if(h(r))return w(i,r.radius,r.startRadian,r.endRadian);if(n===void 0)throw new Error("startAngle undefined");if(t===void 0)throw new Error("endAngle undefined");return w(i,r,n,t)},w=(i,r,n,t)=>{const f=t-n==360,o=e(i,r,t-.01),a=e(i,r,n),u=t-n<=180?"0":"1",d=["M",o.x,o.y,"A",r,r,0,u,0,a.x,a.y];return f&&d.push("z"),d.map(R=>R.toString()).join(" ").trim()};export{v as g,h as i,E as t};
