var p=Object.defineProperty;var w=(s,t,e)=>t in s?p(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var u=(s,t,e)=>(w(s,typeof t!="symbol"?t+"":t,e),e),g=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)};var r=(s,t,e)=>(g(s,t,"read from private field"),e?e.call(s):t.get(s)),l=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)},h=(s,t,e,i)=>(g(s,t,"write to private field"),i?i.call(s,e):t.set(s,e),e),m=(s,t,e,i)=>({set _(c){h(s,t,c,e)},get _(){return r(s,t,i)}});import{g as y}from"./Grid.1cf73ea1.js";var o,f,a,n;class E{constructor(t){l(this,o,new Map);l(this,f,new Map);u(this,"fallbacks");l(this,a,0);l(this,n,void 0);t!==void 0?this.fallbacks=t:this.fallbacks=["red","blue","green","orange"],h(this,n,document.body)}setElementBase(t){h(this,n,t)}add(t,e){r(this,o).set(t,e)}alias(t,e){r(this,f).set(t,e)}get(t,e){const i=r(this,f).get(t);i!==void 0&&(t=i);const c=r(this,o).get(t);if(c!==void 0)return c;const v="--"+t;let d=getComputedStyle(r(this,n)).getPropertyValue(v).trim();if(d===void 0||d.length===0){if(e!==void 0)return e;d=this.fallbacks[r(this,a)],m(this,a)._++,r(this,a)===this.fallbacks.length&&h(this,a,0)}return d}has(t){return r(this,o).has(t)}}o=new WeakMap,f=new WeakMap,a=new WeakMap,n=new WeakMap;const P=(s,t="black",e)=>{e===void 0&&(e=document.body);const i=getComputedStyle(e).getPropertyValue(`--${s}`).trim();return i===void 0||i.length===0?t:i},b=(s,t="Dimension")=>{if(s===void 0)throw Error(`${t} is undefined`);if(isNaN(s))throw Error(`${t} is NaN`);if(s<0)throw Error(`${t} cannot be negative`)},$=(s,t,e)=>(b(t,"width"),b(e,"height"),y(s,"origin"),{x:s.x,y:s.y,width:t,height:e});export{E as P,$ as f,P as g};
