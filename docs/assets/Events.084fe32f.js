var c=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)};var s=(n,e,t)=>(c(n,e,"read from private field"),t?t.call(n):e.get(n)),o=(n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)};var i;class g{constructor(){o(this,i,new Map)}add(e,...t){const r=s(this,i).get(e);r===void 0?s(this,i).set(e,t):s(this,i).set(e,[...r,...t])}debugString(){let e="";return Array.from(s(this,i).keys()).every(r=>{const l=s(this,i).get(r);l!==void 0&&(e+=r+` (${l.length}) = ${JSON.stringify(l)}\r
`)}),e}get(e){return s(this,i).get(e)}delete(e,t){const r=s(this,i).get(e);if(r===void 0)return!1;const l=r.filter(a=>a!==t);return s(this,i).set(e,l),l.length<r.length}clear(){s(this,i).clear()}}i=new WeakMap;var h;class v{constructor(){o(this,h,new g)}fireEvent(e,t){const r=s(this,h).get(e);r!==void 0&&r.forEach(l=>{try{l(t,this)}catch(a){console.debug("Event listener error: ",a)}})}addEventListener(e,t){s(this,h).add(e,t)}removeEventListener(e,t){s(this,h).delete(e,t)}clearEventListeners(){s(this,h).clear()}}h=new WeakMap;export{v as S};
